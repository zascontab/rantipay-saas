// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/logging/type/log_severity.proto

package ltype

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The severity of the event described in a log entry, expressed as one of the
// standard severity levels listed below.  For your reference, the levels are
// assigned the listed numeric values. The effect of using numeric values other
// than those listed is undefined.
//
// You can filter for log entries by severity.  For example, the following
// filter expression will match log entries with severities `INFO`, `NOTICE`,
// and `WARNING`:
//
//	severity > DEBUG AND severity <= WARNING
//
// If you are writing log entries, you should map other severity encodings to
// one of these standard levels. For example, you might map all of Java's FINE,
// FINER, and FINEST levels to `LogSeverity.DEBUG`. You can preserve the
// original severity level in the log entry payload if you wish.
type LogSeverity int32

const (
	// (0) The log entry has no assigned severity level.
	LogSeverity_DEFAULT LogSeverity = 0
	// (100) Debug or trace information.
	LogSeverity_DEBUG LogSeverity = 100
	// (200) Routine information, such as ongoing status or performance.
	LogSeverity_INFO LogSeverity = 200
	// (300) Normal but significant events, such as start up, shut down, or
	// a configuration change.
	LogSeverity_NOTICE LogSeverity = 300
	// (400) Warning events might cause problems.
	LogSeverity_WARNING LogSeverity = 400
	// (500) Error events are likely to cause problems.
	LogSeverity_ERROR LogSeverity = 500
	// (600) Critical events cause more severe problems or outages.
	LogSeverity_CRITICAL LogSeverity = 600
	// (700) A person must take an action immediately.
	LogSeverity_ALERT LogSeverity = 700
	// (800) One or more systems are unusable.
	LogSeverity_EMERGENCY LogSeverity = 800
)

// Enum value maps for LogSeverity.
var (
	LogSeverity_name = map[int32]string{
		0:   "DEFAULT",
		100: "DEBUG",
		200: "INFO",
		300: "NOTICE",
		400: "WARNING",
		500: "ERROR",
		600: "CRITICAL",
		700: "ALERT",
		800: "EMERGENCY",
	}
	LogSeverity_value = map[string]int32{
		"DEFAULT":   0,
		"DEBUG":     100,
		"INFO":      200,
		"NOTICE":    300,
		"WARNING":   400,
		"ERROR":     500,
		"CRITICAL":  600,
		"ALERT":     700,
		"EMERGENCY": 800,
	}
)

func (x LogSeverity) Enum() *LogSeverity {
	p := new(LogSeverity)
	*p = x
	return p
}

func (x LogSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_google_logging_type_log_severity_proto_enumTypes[0].Descriptor()
}

func (LogSeverity) Type() protoreflect.EnumType {
	return &file_google_logging_type_log_severity_proto_enumTypes[0]
}

func (x LogSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogSeverity.Descriptor instead.
func (LogSeverity) EnumDescriptor() ([]byte, []int) {
	return file_google_logging_type_log_severity_proto_rawDescGZIP(), []int{0}
}

var File_google_logging_type_log_severity_proto protoreflect.FileDescriptor

const file_google_logging_type_log_severity_proto_rawDesc = "" +
	"\n" +
	"&google/logging/type/log_severity.proto\x12\x13google.logging.type*\x82\x01\n" +
	"\vLogSeverity\x12\v\n" +
	"\aDEFAULT\x10\x00\x12\t\n" +
	"\x05DEBUG\x10d\x12\t\n" +
	"\x04INFO\x10\xc8\x01\x12\v\n" +
	"\x06NOTICE\x10\xac\x02\x12\f\n" +
	"\aWARNING\x10\x90\x03\x12\n" +
	"\n" +
	"\x05ERROR\x10\xf4\x03\x12\r\n" +
	"\bCRITICAL\x10\xd8\x04\x12\n" +
	"\n" +
	"\x05ALERT\x10\xbc\x05\x12\x0e\n" +
	"\tEMERGENCY\x10\xa0\x06B\xc5\x01\n" +
	"\x17com.google.logging.typeB\x10LogSeverityProtoP\x01Z8google.golang.org/genproto/googleapis/logging/type;ltype\xa2\x02\x04GLOG\xaa\x02\x19Google.Cloud.Logging.Type\xca\x02\x19Google\\Cloud\\Logging\\Type\xea\x02\x1cGoogle::Cloud::Logging::Typeb\x06proto3"

var (
	file_google_logging_type_log_severity_proto_rawDescOnce sync.Once
	file_google_logging_type_log_severity_proto_rawDescData []byte
)

func file_google_logging_type_log_severity_proto_rawDescGZIP() []byte {
	file_google_logging_type_log_severity_proto_rawDescOnce.Do(func() {
		file_google_logging_type_log_severity_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_logging_type_log_severity_proto_rawDesc), len(file_google_logging_type_log_severity_proto_rawDesc)))
	})
	return file_google_logging_type_log_severity_proto_rawDescData
}

var file_google_logging_type_log_severity_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_logging_type_log_severity_proto_goTypes = []any{
	(LogSeverity)(0), // 0: google.logging.type.LogSeverity
}
var file_google_logging_type_log_severity_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_google_logging_type_log_severity_proto_init() }
func file_google_logging_type_log_severity_proto_init() {
	if File_google_logging_type_log_severity_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_logging_type_log_severity_proto_rawDesc), len(file_google_logging_type_log_severity_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_logging_type_log_severity_proto_goTypes,
		DependencyIndexes: file_google_logging_type_log_severity_proto_depIdxs,
		EnumInfos:         file_google_logging_type_log_severity_proto_enumTypes,
	}.Build()
	File_google_logging_type_log_severity_proto = out.File
	file_google_logging_type_log_severity_proto_goTypes = nil
	file_google_logging_type_log_severity_proto_depIdxs = nil
}
