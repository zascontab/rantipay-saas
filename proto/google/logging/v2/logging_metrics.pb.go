// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/logging/v2/logging_metrics.proto

package loggingpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	distribution "google.golang.org/genproto/googleapis/api/distribution"
	metric "google.golang.org/genproto/googleapis/api/metric"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Logging API version.
type LogMetric_ApiVersion int32

const (
	// Logging API v2.
	LogMetric_V2 LogMetric_ApiVersion = 0
	// Logging API v1.
	LogMetric_V1 LogMetric_ApiVersion = 1
)

// Enum value maps for LogMetric_ApiVersion.
var (
	LogMetric_ApiVersion_name = map[int32]string{
		0: "V2",
		1: "V1",
	}
	LogMetric_ApiVersion_value = map[string]int32{
		"V2": 0,
		"V1": 1,
	}
)

func (x LogMetric_ApiVersion) Enum() *LogMetric_ApiVersion {
	p := new(LogMetric_ApiVersion)
	*p = x
	return p
}

func (x LogMetric_ApiVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogMetric_ApiVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_google_logging_v2_logging_metrics_proto_enumTypes[0].Descriptor()
}

func (LogMetric_ApiVersion) Type() protoreflect.EnumType {
	return &file_google_logging_v2_logging_metrics_proto_enumTypes[0]
}

func (x LogMetric_ApiVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogMetric_ApiVersion.Descriptor instead.
func (LogMetric_ApiVersion) EnumDescriptor() ([]byte, []int) {
	return file_google_logging_v2_logging_metrics_proto_rawDescGZIP(), []int{0, 0}
}

// Describes a logs-based metric. The value of the metric is the number of log
// entries that match a logs filter in a given time interval.
//
// Logs-based metrics can also be used to extract values from logs and create a
// distribution of the values. The distribution records the statistics of the
// extracted values along with an optional histogram of the values as specified
// by the bucket options.
type LogMetric struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The client-assigned metric identifier.
	// Examples: `"error_count"`, `"nginx/requests"`.
	//
	// Metric identifiers are limited to 100 characters and can include only the
	// following characters: `A-Z`, `a-z`, `0-9`, and the special characters
	// `_-.,+!*',()%/`. The forward-slash character (`/`) denotes a hierarchy of
	// name pieces, and it cannot be the first character of the name.
	//
	// This field is the `[METRIC_ID]` part of a metric resource name in the
	// format "projects/[PROJECT_ID]/metrics/[METRIC_ID]". Example: If the
	// resource name of a metric is
	// `"projects/my-project/metrics/nginx%2Frequests"`, this field's value is
	// `"nginx/requests"`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. A description of this metric, which is used in documentation.
	// The maximum length of the description is 8000 characters.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Required. An [advanced logs
	// filter](https://cloud.google.com/logging/docs/view/advanced_filters) which
	// is used to match log entries. Example:
	//
	//	"resource.type=gae_app AND severity>=ERROR"
	//
	// The maximum length of the filter is 20000 characters.
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	// Optional. The resource name of the Log Bucket that owns the Log Metric.
	// Only Log Buckets in projects are supported. The bucket has to be in the
	// same project as the metric.
	//
	// For example:
	//
	//	`projects/my-project/locations/global/buckets/my-bucket`
	//
	// If empty, then the Log Metric is considered a non-Bucket Log Metric.
	BucketName string `protobuf:"bytes,13,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	// Optional. If set to True, then this metric is disabled and it does not
	// generate any points.
	Disabled bool `protobuf:"varint,12,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Optional. The metric descriptor associated with the logs-based metric.
	// If unspecified, it uses a default metric descriptor with a DELTA metric
	// kind, INT64 value type, with no labels and a unit of "1". Such a metric
	// counts the number of log entries matching the `filter` expression.
	//
	// The `name`, `type`, and `description` fields in the `metric_descriptor`
	// are output only, and is constructed using the `name` and `description`
	// field in the LogMetric.
	//
	// To create a logs-based metric that records a distribution of log values, a
	// DELTA metric kind with a DISTRIBUTION value type must be used along with
	// a `value_extractor` expression in the LogMetric.
	//
	// Each label in the metric descriptor must have a matching label
	// name as the key and an extractor expression as the value in the
	// `label_extractors` map.
	//
	// The `metric_kind` and `value_type` fields in the `metric_descriptor` cannot
	// be updated once initially configured. New labels can be added in the
	// `metric_descriptor`, but existing labels cannot be modified except for
	// their description.
	MetricDescriptor *metric.MetricDescriptor `protobuf:"bytes,5,opt,name=metric_descriptor,json=metricDescriptor,proto3" json:"metric_descriptor,omitempty"`
	// Optional. A `value_extractor` is required when using a distribution
	// logs-based metric to extract the values to record from a log entry.
	// Two functions are supported for value extraction: `EXTRACT(field)` or
	// `REGEXP_EXTRACT(field, regex)`. The arguments are:
	//
	//  1. field: The name of the log entry field from which the value is to be
	//     extracted.
	//  2. regex: A regular expression using the Google RE2 syntax
	//     (https://github.com/google/re2/wiki/Syntax) with a single capture
	//     group to extract data from the specified log entry field. The value
	//     of the field is converted to a string before applying the regex.
	//     It is an error to specify a regex that does not include exactly one
	//     capture group.
	//
	// The result of the extraction must be convertible to a double type, as the
	// distribution always records double values. If either the extraction or
	// the conversion to double fails, then those values are not recorded in the
	// distribution.
	//
	// Example: `REGEXP_EXTRACT(jsonPayload.request, ".*quantity=(\d+).*")`
	ValueExtractor string `protobuf:"bytes,6,opt,name=value_extractor,json=valueExtractor,proto3" json:"value_extractor,omitempty"`
	// Optional. A map from a label key string to an extractor expression which is
	// used to extract data from a log entry field and assign as the label value.
	// Each label key specified in the LabelDescriptor must have an associated
	// extractor expression in this map. The syntax of the extractor expression
	// is the same as for the `value_extractor` field.
	//
	// The extracted value is converted to the type defined in the label
	// descriptor. If either the extraction or the type conversion fails,
	// the label will have a default value. The default value for a string
	// label is an empty string, for an integer label its 0, and for a boolean
	// label its `false`.
	//
	// Note that there are upper bounds on the maximum number of labels and the
	// number of active time series that are allowed in a project.
	LabelExtractors map[string]string `protobuf:"bytes,7,rep,name=label_extractors,json=labelExtractors,proto3" json:"label_extractors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Optional. The `bucket_options` are required when the logs-based metric is
	// using a DISTRIBUTION value type and it describes the bucket boundaries
	// used to create a histogram of the extracted values.
	BucketOptions *distribution.Distribution_BucketOptions `protobuf:"bytes,8,opt,name=bucket_options,json=bucketOptions,proto3" json:"bucket_options,omitempty"`
	// Output only. The creation timestamp of the metric.
	//
	// This field may not be present for older metrics.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The last update timestamp of the metric.
	//
	// This field may not be present for older metrics.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Deprecated. The API version that created or updated this metric.
	// The v2 format is used by default and cannot be changed.
	//
	// Deprecated: Marked as deprecated in google/logging/v2/logging_metrics.proto.
	Version       LogMetric_ApiVersion `protobuf:"varint,4,opt,name=version,proto3,enum=google.logging.v2.LogMetric_ApiVersion" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogMetric) Reset() {
	*x = LogMetric{}
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMetric) ProtoMessage() {}

func (x *LogMetric) ProtoReflect() protoreflect.Message {
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMetric.ProtoReflect.Descriptor instead.
func (*LogMetric) Descriptor() ([]byte, []int) {
	return file_google_logging_v2_logging_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *LogMetric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogMetric) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LogMetric) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *LogMetric) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *LogMetric) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *LogMetric) GetMetricDescriptor() *metric.MetricDescriptor {
	if x != nil {
		return x.MetricDescriptor
	}
	return nil
}

func (x *LogMetric) GetValueExtractor() string {
	if x != nil {
		return x.ValueExtractor
	}
	return ""
}

func (x *LogMetric) GetLabelExtractors() map[string]string {
	if x != nil {
		return x.LabelExtractors
	}
	return nil
}

func (x *LogMetric) GetBucketOptions() *distribution.Distribution_BucketOptions {
	if x != nil {
		return x.BucketOptions
	}
	return nil
}

func (x *LogMetric) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *LogMetric) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// Deprecated: Marked as deprecated in google/logging/v2/logging_metrics.proto.
func (x *LogMetric) GetVersion() LogMetric_ApiVersion {
	if x != nil {
		return x.Version
	}
	return LogMetric_V2
}

// The parameters to ListLogMetrics.
type ListLogMetricsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The name of the project containing the metrics:
	//
	//	"projects/[PROJECT_ID]"
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Optional. If present, then retrieve the next batch of results from the
	// preceding call to this method. `pageToken` must be the value of
	// `nextPageToken` from the previous response. The values of other method
	// parameters should be identical to those in the previous call.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Optional. The maximum number of results to return from this request.
	// Non-positive values are ignored. The presence of `nextPageToken` in the
	// response indicates that more results might be available.
	PageSize      int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLogMetricsRequest) Reset() {
	*x = ListLogMetricsRequest{}
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLogMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogMetricsRequest) ProtoMessage() {}

func (x *ListLogMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListLogMetricsRequest) Descriptor() ([]byte, []int) {
	return file_google_logging_v2_logging_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *ListLogMetricsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListLogMetricsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListLogMetricsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Result returned from ListLogMetrics.
type ListLogMetricsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of logs-based metrics.
	Metrics []*LogMetric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	// If there might be more results than appear in this response, then
	// `nextPageToken` is included. To get the next set of results, call this
	// method again using the value of `nextPageToken` as `pageToken`.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLogMetricsResponse) Reset() {
	*x = ListLogMetricsResponse{}
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLogMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogMetricsResponse) ProtoMessage() {}

func (x *ListLogMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListLogMetricsResponse) Descriptor() ([]byte, []int) {
	return file_google_logging_v2_logging_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *ListLogMetricsResponse) GetMetrics() []*LogMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *ListLogMetricsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// The parameters to GetLogMetric.
type GetLogMetricRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The resource name of the desired metric:
	//
	//	"projects/[PROJECT_ID]/metrics/[METRIC_ID]"
	MetricName    string `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogMetricRequest) Reset() {
	*x = GetLogMetricRequest{}
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogMetricRequest) ProtoMessage() {}

func (x *GetLogMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogMetricRequest.ProtoReflect.Descriptor instead.
func (*GetLogMetricRequest) Descriptor() ([]byte, []int) {
	return file_google_logging_v2_logging_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *GetLogMetricRequest) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

// The parameters to CreateLogMetric.
type CreateLogMetricRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The resource name of the project in which to create the metric:
	//
	//	"projects/[PROJECT_ID]"
	//
	// The new metric must be provided in the request.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The new logs-based metric, which must not have an identifier that
	// already exists.
	Metric        *LogMetric `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLogMetricRequest) Reset() {
	*x = CreateLogMetricRequest{}
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLogMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLogMetricRequest) ProtoMessage() {}

func (x *CreateLogMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLogMetricRequest.ProtoReflect.Descriptor instead.
func (*CreateLogMetricRequest) Descriptor() ([]byte, []int) {
	return file_google_logging_v2_logging_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *CreateLogMetricRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateLogMetricRequest) GetMetric() *LogMetric {
	if x != nil {
		return x.Metric
	}
	return nil
}

// The parameters to UpdateLogMetric.
type UpdateLogMetricRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The resource name of the metric to update:
	//
	//	"projects/[PROJECT_ID]/metrics/[METRIC_ID]"
	//
	// The updated metric must be provided in the request and it's
	// `name` field must be the same as `[METRIC_ID]` If the metric
	// does not exist in `[PROJECT_ID]`, then a new metric is created.
	MetricName string `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	// Required. The updated metric.
	Metric        *LogMetric `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLogMetricRequest) Reset() {
	*x = UpdateLogMetricRequest{}
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLogMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLogMetricRequest) ProtoMessage() {}

func (x *UpdateLogMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLogMetricRequest.ProtoReflect.Descriptor instead.
func (*UpdateLogMetricRequest) Descriptor() ([]byte, []int) {
	return file_google_logging_v2_logging_metrics_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateLogMetricRequest) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *UpdateLogMetricRequest) GetMetric() *LogMetric {
	if x != nil {
		return x.Metric
	}
	return nil
}

// The parameters to DeleteLogMetric.
type DeleteLogMetricRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The resource name of the metric to delete:
	//
	//	"projects/[PROJECT_ID]/metrics/[METRIC_ID]"
	MetricName    string `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLogMetricRequest) Reset() {
	*x = DeleteLogMetricRequest{}
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLogMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLogMetricRequest) ProtoMessage() {}

func (x *DeleteLogMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_logging_v2_logging_metrics_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLogMetricRequest.ProtoReflect.Descriptor instead.
func (*DeleteLogMetricRequest) Descriptor() ([]byte, []int) {
	return file_google_logging_v2_logging_metrics_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteLogMetricRequest) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

var File_google_logging_v2_logging_metrics_proto protoreflect.FileDescriptor

const file_google_logging_v2_logging_metrics_proto_rawDesc = "" +
	"\n" +
	"'google/logging/v2/logging_metrics.proto\x12\x11google.logging.v2\x1a(google/api/annotations/annotations.proto\x1a\x17google/api/client.proto\x1a\x1dgoogle/api/distribution.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x17google/api/metric.proto\x1a\x19google/api/resource.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xdd\x06\n" +
	"\tLogMetric\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x02R\x04name\x12%\n" +
	"\vdescription\x18\x02 \x01(\tB\x03\xe0A\x01R\vdescription\x12\x1b\n" +
	"\x06filter\x18\x03 \x01(\tB\x03\xe0A\x02R\x06filter\x12$\n" +
	"\vbucket_name\x18\r \x01(\tB\x03\xe0A\x01R\n" +
	"bucketName\x12\x1f\n" +
	"\bdisabled\x18\f \x01(\bB\x03\xe0A\x01R\bdisabled\x12N\n" +
	"\x11metric_descriptor\x18\x05 \x01(\v2\x1c.google.api.MetricDescriptorB\x03\xe0A\x01R\x10metricDescriptor\x12,\n" +
	"\x0fvalue_extractor\x18\x06 \x01(\tB\x03\xe0A\x01R\x0evalueExtractor\x12a\n" +
	"\x10label_extractors\x18\a \x03(\v21.google.logging.v2.LogMetric.LabelExtractorsEntryB\x03\xe0A\x01R\x0flabelExtractors\x12R\n" +
	"\x0ebucket_options\x18\b \x01(\v2&.google.api.Distribution.BucketOptionsB\x03\xe0A\x01R\rbucketOptions\x12@\n" +
	"\vcreate_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"createTime\x12@\n" +
	"\vupdate_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"updateTime\x12E\n" +
	"\aversion\x18\x04 \x01(\x0e2'.google.logging.v2.LogMetric.ApiVersionB\x02\x18\x01R\aversion\x1aB\n" +
	"\x14LabelExtractorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1c\n" +
	"\n" +
	"ApiVersion\x12\x06\n" +
	"\x02V2\x10\x00\x12\x06\n" +
	"\x02V1\x10\x01:J\xeaAG\n" +
	" logging.googleapis.com/LogMetric\x12#projects/{project}/metrics/{metric}\"\xaa\x01\n" +
	"\x15ListLogMetricsRequest\x12K\n" +
	"\x06parent\x18\x01 \x01(\tB3\xe0A\x02\xfaA-\n" +
	"+cloudresourcemanager.googleapis.com/ProjectR\x06parent\x12\"\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\x03\xe0A\x01R\tpageToken\x12 \n" +
	"\tpage_size\x18\x03 \x01(\x05B\x03\xe0A\x01R\bpageSize\"x\n" +
	"\x16ListLogMetricsResponse\x126\n" +
	"\ametrics\x18\x01 \x03(\v2\x1c.google.logging.v2.LogMetricR\ametrics\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"`\n" +
	"\x13GetLogMetricRequest\x12I\n" +
	"\vmetric_name\x18\x01 \x01(\tB(\xe0A\x02\xfaA\"\n" +
	" logging.googleapis.com/LogMetricR\n" +
	"metricName\"\x95\x01\n" +
	"\x16CreateLogMetricRequest\x12@\n" +
	"\x06parent\x18\x01 \x01(\tB(\xe0A\x02\xfaA\"\x12 logging.googleapis.com/LogMetricR\x06parent\x129\n" +
	"\x06metric\x18\x02 \x01(\v2\x1c.google.logging.v2.LogMetricB\x03\xe0A\x02R\x06metric\"\x9e\x01\n" +
	"\x16UpdateLogMetricRequest\x12I\n" +
	"\vmetric_name\x18\x01 \x01(\tB(\xe0A\x02\xfaA\"\n" +
	" logging.googleapis.com/LogMetricR\n" +
	"metricName\x129\n" +
	"\x06metric\x18\x02 \x01(\v2\x1c.google.logging.v2.LogMetricB\x03\xe0A\x02R\x06metric\"c\n" +
	"\x16DeleteLogMetricRequest\x12I\n" +
	"\vmetric_name\x18\x01 \x01(\tB(\xe0A\x02\xfaA\"\n" +
	" logging.googleapis.com/LogMetricR\n" +
	"metricName2\xae\b\n" +
	"\x10MetricsServiceV2\x12\x97\x01\n" +
	"\x0eListLogMetrics\x12(.google.logging.v2.ListLogMetricsRequest\x1a).google.logging.v2.ListLogMetricsResponse\"0\xdaA\x06parent\x82\xd3\xe4\x93\x02!\x12\x1f/v2/{parent=projects/*}/metrics\x12\x92\x01\n" +
	"\fGetLogMetric\x12&.google.logging.v2.GetLogMetricRequest\x1a\x1c.google.logging.v2.LogMetric\"<\xdaA\vmetric_name\x82\xd3\xe4\x93\x02(\x12&/v2/{metric_name=projects/*/metrics/*}\x12\x9b\x01\n" +
	"\x0fCreateLogMetric\x12).google.logging.v2.CreateLogMetricRequest\x1a\x1c.google.logging.v2.LogMetric\"?\xdaA\rparent,metric\x82\xd3\xe4\x93\x02):\x06metric\"\x1f/v2/{parent=projects/*}/metrics\x12\xa7\x01\n" +
	"\x0fUpdateLogMetric\x12).google.logging.v2.UpdateLogMetricRequest\x1a\x1c.google.logging.v2.LogMetric\"K\xdaA\x12metric_name,metric\x82\xd3\xe4\x93\x020:\x06metric\x1a&/v2/{metric_name=projects/*/metrics/*}\x12\x92\x01\n" +
	"\x0fDeleteLogMetric\x12).google.logging.v2.DeleteLogMetricRequest\x1a\x16.google.protobuf.Empty\"<\xdaA\vmetric_name\x82\xd3\xe4\x93\x02(*&/v2/{metric_name=projects/*/metrics/*}\x1a\x8d\x02\xcaA\x16logging.googleapis.com\xd2A\xf0\x01https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only,https://www.googleapis.com/auth/logging.admin,https://www.googleapis.com/auth/logging.read,https://www.googleapis.com/auth/logging.writeB\xb9\x01\n" +
	"\x15com.google.logging.v2B\x13LoggingMetricsProtoP\x01Z5cloud.google.com/go/logging/apiv2/loggingpb;loggingpb\xf8\x01\x01\xaa\x02\x17Google.Cloud.Logging.V2\xca\x02\x17Google\\Cloud\\Logging\\V2\xea\x02\x1aGoogle::Cloud::Logging::V2b\x06proto3"

var (
	file_google_logging_v2_logging_metrics_proto_rawDescOnce sync.Once
	file_google_logging_v2_logging_metrics_proto_rawDescData []byte
)

func file_google_logging_v2_logging_metrics_proto_rawDescGZIP() []byte {
	file_google_logging_v2_logging_metrics_proto_rawDescOnce.Do(func() {
		file_google_logging_v2_logging_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_logging_v2_logging_metrics_proto_rawDesc), len(file_google_logging_v2_logging_metrics_proto_rawDesc)))
	})
	return file_google_logging_v2_logging_metrics_proto_rawDescData
}

var file_google_logging_v2_logging_metrics_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_logging_v2_logging_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_google_logging_v2_logging_metrics_proto_goTypes = []any{
	(LogMetric_ApiVersion)(0),                       // 0: google.logging.v2.LogMetric.ApiVersion
	(*LogMetric)(nil),                               // 1: google.logging.v2.LogMetric
	(*ListLogMetricsRequest)(nil),                   // 2: google.logging.v2.ListLogMetricsRequest
	(*ListLogMetricsResponse)(nil),                  // 3: google.logging.v2.ListLogMetricsResponse
	(*GetLogMetricRequest)(nil),                     // 4: google.logging.v2.GetLogMetricRequest
	(*CreateLogMetricRequest)(nil),                  // 5: google.logging.v2.CreateLogMetricRequest
	(*UpdateLogMetricRequest)(nil),                  // 6: google.logging.v2.UpdateLogMetricRequest
	(*DeleteLogMetricRequest)(nil),                  // 7: google.logging.v2.DeleteLogMetricRequest
	nil,                                             // 8: google.logging.v2.LogMetric.LabelExtractorsEntry
	(*metric.MetricDescriptor)(nil),                 // 9: google.api.MetricDescriptor
	(*distribution.Distribution_BucketOptions)(nil), // 10: google.api.Distribution.BucketOptions
	(*timestamppb.Timestamp)(nil),                   // 11: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                           // 12: google.protobuf.Empty
}
var file_google_logging_v2_logging_metrics_proto_depIdxs = []int32{
	9,  // 0: google.logging.v2.LogMetric.metric_descriptor:type_name -> google.api.MetricDescriptor
	8,  // 1: google.logging.v2.LogMetric.label_extractors:type_name -> google.logging.v2.LogMetric.LabelExtractorsEntry
	10, // 2: google.logging.v2.LogMetric.bucket_options:type_name -> google.api.Distribution.BucketOptions
	11, // 3: google.logging.v2.LogMetric.create_time:type_name -> google.protobuf.Timestamp
	11, // 4: google.logging.v2.LogMetric.update_time:type_name -> google.protobuf.Timestamp
	0,  // 5: google.logging.v2.LogMetric.version:type_name -> google.logging.v2.LogMetric.ApiVersion
	1,  // 6: google.logging.v2.ListLogMetricsResponse.metrics:type_name -> google.logging.v2.LogMetric
	1,  // 7: google.logging.v2.CreateLogMetricRequest.metric:type_name -> google.logging.v2.LogMetric
	1,  // 8: google.logging.v2.UpdateLogMetricRequest.metric:type_name -> google.logging.v2.LogMetric
	2,  // 9: google.logging.v2.MetricsServiceV2.ListLogMetrics:input_type -> google.logging.v2.ListLogMetricsRequest
	4,  // 10: google.logging.v2.MetricsServiceV2.GetLogMetric:input_type -> google.logging.v2.GetLogMetricRequest
	5,  // 11: google.logging.v2.MetricsServiceV2.CreateLogMetric:input_type -> google.logging.v2.CreateLogMetricRequest
	6,  // 12: google.logging.v2.MetricsServiceV2.UpdateLogMetric:input_type -> google.logging.v2.UpdateLogMetricRequest
	7,  // 13: google.logging.v2.MetricsServiceV2.DeleteLogMetric:input_type -> google.logging.v2.DeleteLogMetricRequest
	3,  // 14: google.logging.v2.MetricsServiceV2.ListLogMetrics:output_type -> google.logging.v2.ListLogMetricsResponse
	1,  // 15: google.logging.v2.MetricsServiceV2.GetLogMetric:output_type -> google.logging.v2.LogMetric
	1,  // 16: google.logging.v2.MetricsServiceV2.CreateLogMetric:output_type -> google.logging.v2.LogMetric
	1,  // 17: google.logging.v2.MetricsServiceV2.UpdateLogMetric:output_type -> google.logging.v2.LogMetric
	12, // 18: google.logging.v2.MetricsServiceV2.DeleteLogMetric:output_type -> google.protobuf.Empty
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_google_logging_v2_logging_metrics_proto_init() }
func file_google_logging_v2_logging_metrics_proto_init() {
	if File_google_logging_v2_logging_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_logging_v2_logging_metrics_proto_rawDesc), len(file_google_logging_v2_logging_metrics_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_logging_v2_logging_metrics_proto_goTypes,
		DependencyIndexes: file_google_logging_v2_logging_metrics_proto_depIdxs,
		EnumInfos:         file_google_logging_v2_logging_metrics_proto_enumTypes,
		MessageInfos:      file_google_logging_v2_logging_metrics_proto_msgTypes,
	}.Build()
	File_google_logging_v2_logging_metrics_proto = out.File
	file_google_logging_v2_logging_metrics_proto_goTypes = nil
	file_google_logging_v2_logging_metrics_proto_depIdxs = nil
}
