// Code generated by protoc-gen-go-grpc-proxy. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc-proxy v1.2.0
// - protoc             (unknown)
// source: google/logging/v2/logging_config.proto

package loggingpb

import (
	longrunningpb "cloud.google.com/go/longrunning/autogen/longrunningpb"
	context "context"
	grpc "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var _ ConfigServiceV2Server = (*configServiceV2ClientProxy)(nil)

// configServiceV2ClientProxy is the proxy to turn ConfigServiceV2 client to server interface.
type configServiceV2ClientProxy struct {
	cc ConfigServiceV2Client
}

func NewConfigServiceV2ClientProxy(cc ConfigServiceV2Client) ConfigServiceV2Server {
	return &configServiceV2ClientProxy{cc}
}

func (c *configServiceV2ClientProxy) ListBuckets(ctx context.Context, in *ListBucketsRequest) (*ListBucketsResponse, error) {
	return c.cc.ListBuckets(ctx, in)
}
func (c *configServiceV2ClientProxy) GetBucket(ctx context.Context, in *GetBucketRequest) (*LogBucket, error) {
	return c.cc.GetBucket(ctx, in)
}
func (c *configServiceV2ClientProxy) CreateBucketAsync(ctx context.Context, in *CreateBucketRequest) (*longrunningpb.Operation, error) {
	return c.cc.CreateBucketAsync(ctx, in)
}
func (c *configServiceV2ClientProxy) UpdateBucketAsync(ctx context.Context, in *UpdateBucketRequest) (*longrunningpb.Operation, error) {
	return c.cc.UpdateBucketAsync(ctx, in)
}
func (c *configServiceV2ClientProxy) CreateBucket(ctx context.Context, in *CreateBucketRequest) (*LogBucket, error) {
	return c.cc.CreateBucket(ctx, in)
}
func (c *configServiceV2ClientProxy) UpdateBucket(ctx context.Context, in *UpdateBucketRequest) (*LogBucket, error) {
	return c.cc.UpdateBucket(ctx, in)
}
func (c *configServiceV2ClientProxy) DeleteBucket(ctx context.Context, in *DeleteBucketRequest) (*emptypb.Empty, error) {
	return c.cc.DeleteBucket(ctx, in)
}
func (c *configServiceV2ClientProxy) UndeleteBucket(ctx context.Context, in *UndeleteBucketRequest) (*emptypb.Empty, error) {
	return c.cc.UndeleteBucket(ctx, in)
}
func (c *configServiceV2ClientProxy) ListViews(ctx context.Context, in *ListViewsRequest) (*ListViewsResponse, error) {
	return c.cc.ListViews(ctx, in)
}
func (c *configServiceV2ClientProxy) GetView(ctx context.Context, in *GetViewRequest) (*LogView, error) {
	return c.cc.GetView(ctx, in)
}
func (c *configServiceV2ClientProxy) CreateView(ctx context.Context, in *CreateViewRequest) (*LogView, error) {
	return c.cc.CreateView(ctx, in)
}
func (c *configServiceV2ClientProxy) UpdateView(ctx context.Context, in *UpdateViewRequest) (*LogView, error) {
	return c.cc.UpdateView(ctx, in)
}
func (c *configServiceV2ClientProxy) DeleteView(ctx context.Context, in *DeleteViewRequest) (*emptypb.Empty, error) {
	return c.cc.DeleteView(ctx, in)
}
func (c *configServiceV2ClientProxy) ListSinks(ctx context.Context, in *ListSinksRequest) (*ListSinksResponse, error) {
	return c.cc.ListSinks(ctx, in)
}
func (c *configServiceV2ClientProxy) GetSink(ctx context.Context, in *GetSinkRequest) (*LogSink, error) {
	return c.cc.GetSink(ctx, in)
}
func (c *configServiceV2ClientProxy) CreateSink(ctx context.Context, in *CreateSinkRequest) (*LogSink, error) {
	return c.cc.CreateSink(ctx, in)
}
func (c *configServiceV2ClientProxy) UpdateSink(ctx context.Context, in *UpdateSinkRequest) (*LogSink, error) {
	return c.cc.UpdateSink(ctx, in)
}
func (c *configServiceV2ClientProxy) DeleteSink(ctx context.Context, in *DeleteSinkRequest) (*emptypb.Empty, error) {
	return c.cc.DeleteSink(ctx, in)
}
func (c *configServiceV2ClientProxy) CreateLink(ctx context.Context, in *CreateLinkRequest) (*longrunningpb.Operation, error) {
	return c.cc.CreateLink(ctx, in)
}
func (c *configServiceV2ClientProxy) DeleteLink(ctx context.Context, in *DeleteLinkRequest) (*longrunningpb.Operation, error) {
	return c.cc.DeleteLink(ctx, in)
}
func (c *configServiceV2ClientProxy) ListLinks(ctx context.Context, in *ListLinksRequest) (*ListLinksResponse, error) {
	return c.cc.ListLinks(ctx, in)
}
func (c *configServiceV2ClientProxy) GetLink(ctx context.Context, in *GetLinkRequest) (*Link, error) {
	return c.cc.GetLink(ctx, in)
}
func (c *configServiceV2ClientProxy) ListExclusions(ctx context.Context, in *ListExclusionsRequest) (*ListExclusionsResponse, error) {
	return c.cc.ListExclusions(ctx, in)
}
func (c *configServiceV2ClientProxy) GetExclusion(ctx context.Context, in *GetExclusionRequest) (*LogExclusion, error) {
	return c.cc.GetExclusion(ctx, in)
}
func (c *configServiceV2ClientProxy) CreateExclusion(ctx context.Context, in *CreateExclusionRequest) (*LogExclusion, error) {
	return c.cc.CreateExclusion(ctx, in)
}
func (c *configServiceV2ClientProxy) UpdateExclusion(ctx context.Context, in *UpdateExclusionRequest) (*LogExclusion, error) {
	return c.cc.UpdateExclusion(ctx, in)
}
func (c *configServiceV2ClientProxy) DeleteExclusion(ctx context.Context, in *DeleteExclusionRequest) (*emptypb.Empty, error) {
	return c.cc.DeleteExclusion(ctx, in)
}
func (c *configServiceV2ClientProxy) GetCmekSettings(ctx context.Context, in *GetCmekSettingsRequest) (*CmekSettings, error) {
	return c.cc.GetCmekSettings(ctx, in)
}
func (c *configServiceV2ClientProxy) UpdateCmekSettings(ctx context.Context, in *UpdateCmekSettingsRequest) (*CmekSettings, error) {
	return c.cc.UpdateCmekSettings(ctx, in)
}
func (c *configServiceV2ClientProxy) GetSettings(ctx context.Context, in *GetSettingsRequest) (*Settings, error) {
	return c.cc.GetSettings(ctx, in)
}
func (c *configServiceV2ClientProxy) UpdateSettings(ctx context.Context, in *UpdateSettingsRequest) (*Settings, error) {
	return c.cc.UpdateSettings(ctx, in)
}
func (c *configServiceV2ClientProxy) CopyLogEntries(ctx context.Context, in *CopyLogEntriesRequest) (*longrunningpb.Operation, error) {
	return c.cc.CopyLogEntries(ctx, in)
}
