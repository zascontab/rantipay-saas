// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/api/servicecontrol/v1/check_error.proto

package servicecontrolpb

import (
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Error codes for Check responses.
type CheckError_Code int32

const (
	// This is never used in `CheckResponse`.
	CheckError_ERROR_CODE_UNSPECIFIED CheckError_Code = 0
	// The consumer's project id, network container, or resource container was
	// not found. Same as [google.rpc.Code.NOT_FOUND][google.rpc.Code.NOT_FOUND].
	CheckError_NOT_FOUND CheckError_Code = 5
	// The consumer doesn't have access to the specified resource.
	// Same as [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED].
	CheckError_PERMISSION_DENIED CheckError_Code = 7
	// Quota check failed. Same as [google.rpc.Code.RESOURCE_EXHAUSTED][google.rpc.Code.RESOURCE_EXHAUSTED].
	CheckError_RESOURCE_EXHAUSTED CheckError_Code = 8
	// The consumer hasn't activated the service.
	CheckError_SERVICE_NOT_ACTIVATED CheckError_Code = 104
	// The consumer cannot access the service because billing is disabled.
	CheckError_BILLING_DISABLED CheckError_Code = 107
	// The consumer's project has been marked as deleted (soft deletion).
	CheckError_PROJECT_DELETED CheckError_Code = 108
	// The consumer's project number or id does not represent a valid project.
	CheckError_PROJECT_INVALID CheckError_Code = 114
	// The input consumer info does not represent a valid consumer folder or
	// organization.
	CheckError_CONSUMER_INVALID CheckError_Code = 125
	// The IP address of the consumer is invalid for the specific consumer
	// project.
	CheckError_IP_ADDRESS_BLOCKED CheckError_Code = 109
	// The referer address of the consumer request is invalid for the specific
	// consumer project.
	CheckError_REFERER_BLOCKED CheckError_Code = 110
	// The client application of the consumer request is invalid for the
	// specific consumer project.
	CheckError_CLIENT_APP_BLOCKED CheckError_Code = 111
	// The API targeted by this request is invalid for the specified consumer
	// project.
	CheckError_API_TARGET_BLOCKED CheckError_Code = 122
	// The consumer's API key is invalid.
	CheckError_API_KEY_INVALID CheckError_Code = 105
	// The consumer's API Key has expired.
	CheckError_API_KEY_EXPIRED CheckError_Code = 112
	// The consumer's API Key was not found in config record.
	CheckError_API_KEY_NOT_FOUND CheckError_Code = 113
	// The credential in the request can not be verified.
	CheckError_INVALID_CREDENTIAL CheckError_Code = 123
	// The backend server for looking up project id/number is unavailable.
	CheckError_NAMESPACE_LOOKUP_UNAVAILABLE CheckError_Code = 300
	// The backend server for checking service status is unavailable.
	CheckError_SERVICE_STATUS_UNAVAILABLE CheckError_Code = 301
	// The backend server for checking billing status is unavailable.
	CheckError_BILLING_STATUS_UNAVAILABLE CheckError_Code = 302
	// Cloud Resource Manager backend server is unavailable.
	CheckError_CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE CheckError_Code = 305
)

// Enum value maps for CheckError_Code.
var (
	CheckError_Code_name = map[int32]string{
		0:   "ERROR_CODE_UNSPECIFIED",
		5:   "NOT_FOUND",
		7:   "PERMISSION_DENIED",
		8:   "RESOURCE_EXHAUSTED",
		104: "SERVICE_NOT_ACTIVATED",
		107: "BILLING_DISABLED",
		108: "PROJECT_DELETED",
		114: "PROJECT_INVALID",
		125: "CONSUMER_INVALID",
		109: "IP_ADDRESS_BLOCKED",
		110: "REFERER_BLOCKED",
		111: "CLIENT_APP_BLOCKED",
		122: "API_TARGET_BLOCKED",
		105: "API_KEY_INVALID",
		112: "API_KEY_EXPIRED",
		113: "API_KEY_NOT_FOUND",
		123: "INVALID_CREDENTIAL",
		300: "NAMESPACE_LOOKUP_UNAVAILABLE",
		301: "SERVICE_STATUS_UNAVAILABLE",
		302: "BILLING_STATUS_UNAVAILABLE",
		305: "CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE",
	}
	CheckError_Code_value = map[string]int32{
		"ERROR_CODE_UNSPECIFIED":                     0,
		"NOT_FOUND":                                  5,
		"PERMISSION_DENIED":                          7,
		"RESOURCE_EXHAUSTED":                         8,
		"SERVICE_NOT_ACTIVATED":                      104,
		"BILLING_DISABLED":                           107,
		"PROJECT_DELETED":                            108,
		"PROJECT_INVALID":                            114,
		"CONSUMER_INVALID":                           125,
		"IP_ADDRESS_BLOCKED":                         109,
		"REFERER_BLOCKED":                            110,
		"CLIENT_APP_BLOCKED":                         111,
		"API_TARGET_BLOCKED":                         122,
		"API_KEY_INVALID":                            105,
		"API_KEY_EXPIRED":                            112,
		"API_KEY_NOT_FOUND":                          113,
		"INVALID_CREDENTIAL":                         123,
		"NAMESPACE_LOOKUP_UNAVAILABLE":               300,
		"SERVICE_STATUS_UNAVAILABLE":                 301,
		"BILLING_STATUS_UNAVAILABLE":                 302,
		"CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE": 305,
	}
)

func (x CheckError_Code) Enum() *CheckError_Code {
	p := new(CheckError_Code)
	*p = x
	return p
}

func (x CheckError_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckError_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_google_api_servicecontrol_v1_check_error_proto_enumTypes[0].Descriptor()
}

func (CheckError_Code) Type() protoreflect.EnumType {
	return &file_google_api_servicecontrol_v1_check_error_proto_enumTypes[0]
}

func (x CheckError_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckError_Code.Descriptor instead.
func (CheckError_Code) EnumDescriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_check_error_proto_rawDescGZIP(), []int{0, 0}
}

// Defines the errors to be returned in
// [google.api.servicecontrol.v1.CheckResponse.check_errors][google.api.servicecontrol.v1.CheckResponse.check_errors].
type CheckError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The error code.
	Code CheckError_Code `protobuf:"varint,1,opt,name=code,proto3,enum=google.api.servicecontrol.v1.CheckError_Code" json:"code,omitempty"`
	// Subject to whom this error applies. See the specific code enum for more
	// details on this field. For example:
	//
	// - "project:<project-id or project-number>"
	// - "folder:<folder-id>"
	// - "organization:<organization-id>"
	Subject string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	// Free-form text providing details on the error cause of the error.
	Detail string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	// Contains public information about the check error. If available,
	// `status.code` will be non zero and client can propagate it out as public
	// error.
	Status        *status.Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckError) Reset() {
	*x = CheckError{}
	mi := &file_google_api_servicecontrol_v1_check_error_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckError) ProtoMessage() {}

func (x *CheckError) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_check_error_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckError.ProtoReflect.Descriptor instead.
func (*CheckError) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_check_error_proto_rawDescGZIP(), []int{0}
}

func (x *CheckError) GetCode() CheckError_Code {
	if x != nil {
		return x.Code
	}
	return CheckError_ERROR_CODE_UNSPECIFIED
}

func (x *CheckError) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CheckError) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *CheckError) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_google_api_servicecontrol_v1_check_error_proto protoreflect.FileDescriptor

const file_google_api_servicecontrol_v1_check_error_proto_rawDesc = "" +
	"\n" +
	".google/api/servicecontrol/v1/check_error.proto\x12\x1cgoogle.api.servicecontrol.v1\x1a\x1egoogle/rpc/status/status.proto\"\xcd\x05\n" +
	"\n" +
	"CheckError\x12A\n" +
	"\x04code\x18\x01 \x01(\x0e2-.google.api.servicecontrol.v1.CheckError.CodeR\x04code\x12\x18\n" +
	"\asubject\x18\x04 \x01(\tR\asubject\x12\x16\n" +
	"\x06detail\x18\x02 \x01(\tR\x06detail\x12*\n" +
	"\x06status\x18\x03 \x01(\v2\x12.google.rpc.StatusR\x06status\"\x9d\x04\n" +
	"\x04Code\x12\x1a\n" +
	"\x16ERROR_CODE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tNOT_FOUND\x10\x05\x12\x15\n" +
	"\x11PERMISSION_DENIED\x10\a\x12\x16\n" +
	"\x12RESOURCE_EXHAUSTED\x10\b\x12\x19\n" +
	"\x15SERVICE_NOT_ACTIVATED\x10h\x12\x14\n" +
	"\x10BILLING_DISABLED\x10k\x12\x13\n" +
	"\x0fPROJECT_DELETED\x10l\x12\x13\n" +
	"\x0fPROJECT_INVALID\x10r\x12\x14\n" +
	"\x10CONSUMER_INVALID\x10}\x12\x16\n" +
	"\x12IP_ADDRESS_BLOCKED\x10m\x12\x13\n" +
	"\x0fREFERER_BLOCKED\x10n\x12\x16\n" +
	"\x12CLIENT_APP_BLOCKED\x10o\x12\x16\n" +
	"\x12API_TARGET_BLOCKED\x10z\x12\x13\n" +
	"\x0fAPI_KEY_INVALID\x10i\x12\x13\n" +
	"\x0fAPI_KEY_EXPIRED\x10p\x12\x15\n" +
	"\x11API_KEY_NOT_FOUND\x10q\x12\x16\n" +
	"\x12INVALID_CREDENTIAL\x10{\x12!\n" +
	"\x1cNAMESPACE_LOOKUP_UNAVAILABLE\x10\xac\x02\x12\x1f\n" +
	"\x1aSERVICE_STATUS_UNAVAILABLE\x10\xad\x02\x12\x1f\n" +
	"\x1aBILLING_STATUS_UNAVAILABLE\x10\xae\x02\x12/\n" +
	"*CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE\x10\xb1\x02B\xea\x01\n" +
	" com.google.api.servicecontrol.v1B\x0fCheckErrorProtoP\x01ZJcloud.google.com/go/servicecontrol/apiv1/servicecontrolpb;servicecontrolpb\xf8\x01\x01\xaa\x02\x1eGoogle.Cloud.ServiceControl.V1\xca\x02\x1eGoogle\\Cloud\\ServiceControl\\V1\xea\x02!Google::Cloud::ServiceControl::V1b\x06proto3"

var (
	file_google_api_servicecontrol_v1_check_error_proto_rawDescOnce sync.Once
	file_google_api_servicecontrol_v1_check_error_proto_rawDescData []byte
)

func file_google_api_servicecontrol_v1_check_error_proto_rawDescGZIP() []byte {
	file_google_api_servicecontrol_v1_check_error_proto_rawDescOnce.Do(func() {
		file_google_api_servicecontrol_v1_check_error_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_api_servicecontrol_v1_check_error_proto_rawDesc), len(file_google_api_servicecontrol_v1_check_error_proto_rawDesc)))
	})
	return file_google_api_servicecontrol_v1_check_error_proto_rawDescData
}

var file_google_api_servicecontrol_v1_check_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_api_servicecontrol_v1_check_error_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_api_servicecontrol_v1_check_error_proto_goTypes = []any{
	(CheckError_Code)(0),  // 0: google.api.servicecontrol.v1.CheckError.Code
	(*CheckError)(nil),    // 1: google.api.servicecontrol.v1.CheckError
	(*status.Status)(nil), // 2: google.rpc.Status
}
var file_google_api_servicecontrol_v1_check_error_proto_depIdxs = []int32{
	0, // 0: google.api.servicecontrol.v1.CheckError.code:type_name -> google.api.servicecontrol.v1.CheckError.Code
	2, // 1: google.api.servicecontrol.v1.CheckError.status:type_name -> google.rpc.Status
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_google_api_servicecontrol_v1_check_error_proto_init() }
func file_google_api_servicecontrol_v1_check_error_proto_init() {
	if File_google_api_servicecontrol_v1_check_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_api_servicecontrol_v1_check_error_proto_rawDesc), len(file_google_api_servicecontrol_v1_check_error_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_api_servicecontrol_v1_check_error_proto_goTypes,
		DependencyIndexes: file_google_api_servicecontrol_v1_check_error_proto_depIdxs,
		EnumInfos:         file_google_api_servicecontrol_v1_check_error_proto_enumTypes,
		MessageInfos:      file_google_api_servicecontrol_v1_check_error_proto_msgTypes,
	}.Build()
	File_google_api_servicecontrol_v1_check_error_proto = out.File
	file_google_api_servicecontrol_v1_check_error_proto_goTypes = nil
	file_google_api_servicecontrol_v1_check_error_proto_depIdxs = nil
}
