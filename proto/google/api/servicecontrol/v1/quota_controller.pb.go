// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/api/servicecontrol/v1/quota_controller.proto

package servicecontrolpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Supported quota modes.
type QuotaOperation_QuotaMode int32

const (
	// Guard against implicit default. Must not be used.
	QuotaOperation_UNSPECIFIED QuotaOperation_QuotaMode = 0
	// For AllocateQuota request, allocates quota for the amount specified in
	// the service configuration or specified using the quota metrics. If the
	// amount is higher than the available quota, allocation error will be
	// returned and no quota will be allocated.
	// If multiple quotas are part of the request, and one fails, none of the
	// quotas are allocated or released.
	QuotaOperation_NORMAL QuotaOperation_QuotaMode = 1
	// The operation allocates quota for the amount specified in the service
	// configuration or specified using the quota metrics. If the amount is
	// higher than the available quota, request does not fail but all available
	// quota will be allocated.
	// For rate quota, BEST_EFFORT will continue to deduct from other groups
	// even if one does not have enough quota. For allocation, it will find the
	// minimum available amount across all groups and deduct that amount from
	// all the affected groups.
	QuotaOperation_BEST_EFFORT QuotaOperation_QuotaMode = 2
	// For AllocateQuota request, only checks if there is enough quota
	// available and does not change the available quota. No lock is placed on
	// the available quota either.
	QuotaOperation_CHECK_ONLY QuotaOperation_QuotaMode = 3
	// Unimplemented. When used in AllocateQuotaRequest, this returns the
	// effective quota limit(s) in the response, and no quota check will be
	// performed. Not supported for other requests, and even for
	// AllocateQuotaRequest, this is currently supported only for allowlisted
	// services.
	QuotaOperation_QUERY_ONLY QuotaOperation_QuotaMode = 4
	// The operation allocates quota for the amount specified in the service
	// configuration or specified using the quota metrics. If the requested
	// amount is higher than the available quota, request does not fail and
	// remaining quota would become negative (going over the limit).
	// Not supported for Rate Quota.
	QuotaOperation_ADJUST_ONLY QuotaOperation_QuotaMode = 5
)

// Enum value maps for QuotaOperation_QuotaMode.
var (
	QuotaOperation_QuotaMode_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "NORMAL",
		2: "BEST_EFFORT",
		3: "CHECK_ONLY",
		4: "QUERY_ONLY",
		5: "ADJUST_ONLY",
	}
	QuotaOperation_QuotaMode_value = map[string]int32{
		"UNSPECIFIED": 0,
		"NORMAL":      1,
		"BEST_EFFORT": 2,
		"CHECK_ONLY":  3,
		"QUERY_ONLY":  4,
		"ADJUST_ONLY": 5,
	}
)

func (x QuotaOperation_QuotaMode) Enum() *QuotaOperation_QuotaMode {
	p := new(QuotaOperation_QuotaMode)
	*p = x
	return p
}

func (x QuotaOperation_QuotaMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuotaOperation_QuotaMode) Descriptor() protoreflect.EnumDescriptor {
	return file_google_api_servicecontrol_v1_quota_controller_proto_enumTypes[0].Descriptor()
}

func (QuotaOperation_QuotaMode) Type() protoreflect.EnumType {
	return &file_google_api_servicecontrol_v1_quota_controller_proto_enumTypes[0]
}

func (x QuotaOperation_QuotaMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuotaOperation_QuotaMode.Descriptor instead.
func (QuotaOperation_QuotaMode) EnumDescriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_quota_controller_proto_rawDescGZIP(), []int{1, 0}
}

// Error codes related to project config validations are deprecated since the
// quota controller methods do not perform these validations. Instead services
// have to call the Check method, without quota_properties field, to perform
// these validations before calling the quota controller methods. These
// methods check only for project deletion to be wipe out compliant.
type QuotaError_Code int32

const (
	// This is never used.
	QuotaError_UNSPECIFIED QuotaError_Code = 0
	// Quota allocation failed.
	// Same as [google.rpc.Code.RESOURCE_EXHAUSTED][google.rpc.Code.RESOURCE_EXHAUSTED].
	QuotaError_RESOURCE_EXHAUSTED QuotaError_Code = 8
	// Consumer cannot access the service because the service requires active
	// billing.
	QuotaError_BILLING_NOT_ACTIVE QuotaError_Code = 107
	// Consumer's project has been marked as deleted (soft deletion).
	QuotaError_PROJECT_DELETED QuotaError_Code = 108
	// Specified API key is invalid.
	QuotaError_API_KEY_INVALID QuotaError_Code = 105
	// Specified API Key has expired.
	QuotaError_API_KEY_EXPIRED QuotaError_Code = 112
)

// Enum value maps for QuotaError_Code.
var (
	QuotaError_Code_name = map[int32]string{
		0:   "UNSPECIFIED",
		8:   "RESOURCE_EXHAUSTED",
		107: "BILLING_NOT_ACTIVE",
		108: "PROJECT_DELETED",
		105: "API_KEY_INVALID",
		112: "API_KEY_EXPIRED",
	}
	QuotaError_Code_value = map[string]int32{
		"UNSPECIFIED":        0,
		"RESOURCE_EXHAUSTED": 8,
		"BILLING_NOT_ACTIVE": 107,
		"PROJECT_DELETED":    108,
		"API_KEY_INVALID":    105,
		"API_KEY_EXPIRED":    112,
	}
)

func (x QuotaError_Code) Enum() *QuotaError_Code {
	p := new(QuotaError_Code)
	*p = x
	return p
}

func (x QuotaError_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuotaError_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_google_api_servicecontrol_v1_quota_controller_proto_enumTypes[1].Descriptor()
}

func (QuotaError_Code) Type() protoreflect.EnumType {
	return &file_google_api_servicecontrol_v1_quota_controller_proto_enumTypes[1]
}

func (x QuotaError_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuotaError_Code.Descriptor instead.
func (QuotaError_Code) EnumDescriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_quota_controller_proto_rawDescGZIP(), []int{3, 0}
}

// Request message for the AllocateQuota method.
type AllocateQuotaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the service as specified in the service configuration. For example,
	// `"pubsub.googleapis.com"`.
	//
	// See [google.api.Service][google.api.Service] for the definition of a service name.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Operation that describes the quota allocation.
	AllocateOperation *QuotaOperation `protobuf:"bytes,2,opt,name=allocate_operation,json=allocateOperation,proto3" json:"allocate_operation,omitempty"`
	// Specifies which version of service configuration should be used to process
	// the request. If unspecified or no matching version can be found, the latest
	// one will be used.
	ServiceConfigId string `protobuf:"bytes,4,opt,name=service_config_id,json=serviceConfigId,proto3" json:"service_config_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AllocateQuotaRequest) Reset() {
	*x = AllocateQuotaRequest{}
	mi := &file_google_api_servicecontrol_v1_quota_controller_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocateQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateQuotaRequest) ProtoMessage() {}

func (x *AllocateQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_quota_controller_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateQuotaRequest.ProtoReflect.Descriptor instead.
func (*AllocateQuotaRequest) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_quota_controller_proto_rawDescGZIP(), []int{0}
}

func (x *AllocateQuotaRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *AllocateQuotaRequest) GetAllocateOperation() *QuotaOperation {
	if x != nil {
		return x.AllocateOperation
	}
	return nil
}

func (x *AllocateQuotaRequest) GetServiceConfigId() string {
	if x != nil {
		return x.ServiceConfigId
	}
	return ""
}

// Represents information regarding a quota operation.
type QuotaOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identity of the operation. This is expected to be unique within the scope
	// of the service that generated the operation, and guarantees idempotency in
	// case of retries.
	//
	// In order to ensure best performance and latency in the Quota backends,
	// operation_ids are optimally associated with time, so that related
	// operations can be accessed fast in storage. For this reason, the
	// recommended token for services that intend to operate at a high QPS is
	// Unix time in nanos + UUID
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Fully qualified name of the API method for which this quota operation is
	// requested. This name is used for matching quota rules or metric rules and
	// billing status rules defined in service configuration.
	//
	// This field should not be set if any of the following is true:
	// (1) the quota operation is performed on non-API resources.
	// (2) quota_metrics is set because the caller is doing quota override.
	//
	// Example of an RPC method name:
	//
	//	google.example.library.v1.LibraryService.CreateShelf
	MethodName string `protobuf:"bytes,2,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	// Identity of the consumer for whom this quota operation is being performed.
	//
	// This can be in one of the following formats:
	//
	//	project:<project_id>,
	//	project_number:<project_number>,
	//	api_key:<api_key>.
	ConsumerId string `protobuf:"bytes,3,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	// Labels describing the operation.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Represents information about this operation. Each MetricValueSet
	// corresponds to a metric defined in the service configuration.
	// The data type used in the MetricValueSet must agree with
	// the data type specified in the metric definition.
	//
	// Within a single operation, it is not allowed to have more than one
	// MetricValue instances that have the same metric names and identical
	// label value combinations. If a request has such duplicated MetricValue
	// instances, the entire request is rejected with
	// an invalid argument error.
	//
	// This field is mutually exclusive with method_name.
	QuotaMetrics []*MetricValueSet `protobuf:"bytes,5,rep,name=quota_metrics,json=quotaMetrics,proto3" json:"quota_metrics,omitempty"`
	// Quota mode for this operation.
	QuotaMode     QuotaOperation_QuotaMode `protobuf:"varint,6,opt,name=quota_mode,json=quotaMode,proto3,enum=google.api.servicecontrol.v1.QuotaOperation_QuotaMode" json:"quota_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuotaOperation) Reset() {
	*x = QuotaOperation{}
	mi := &file_google_api_servicecontrol_v1_quota_controller_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuotaOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaOperation) ProtoMessage() {}

func (x *QuotaOperation) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_quota_controller_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaOperation.ProtoReflect.Descriptor instead.
func (*QuotaOperation) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_quota_controller_proto_rawDescGZIP(), []int{1}
}

func (x *QuotaOperation) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *QuotaOperation) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *QuotaOperation) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *QuotaOperation) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *QuotaOperation) GetQuotaMetrics() []*MetricValueSet {
	if x != nil {
		return x.QuotaMetrics
	}
	return nil
}

func (x *QuotaOperation) GetQuotaMode() QuotaOperation_QuotaMode {
	if x != nil {
		return x.QuotaMode
	}
	return QuotaOperation_UNSPECIFIED
}

// Response message for the AllocateQuota method.
type AllocateQuotaResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The same operation_id value used in the AllocateQuotaRequest. Used for
	// logging and diagnostics purposes.
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Indicates the decision of the allocate.
	AllocateErrors []*QuotaError `protobuf:"bytes,2,rep,name=allocate_errors,json=allocateErrors,proto3" json:"allocate_errors,omitempty"`
	// Quota metrics to indicate the result of allocation. Depending on the
	// request, one or more of the following metrics will be included:
	//
	// 1. Per quota group or per quota metric incremental usage will be specified
	// using the following delta metric :
	//
	//	"serviceruntime.googleapis.com/api/consumer/quota_used_count"
	//
	// 2. The quota limit reached condition will be specified using the following
	// boolean metric :
	//
	//	"serviceruntime.googleapis.com/quota/exceeded"
	QuotaMetrics []*MetricValueSet `protobuf:"bytes,3,rep,name=quota_metrics,json=quotaMetrics,proto3" json:"quota_metrics,omitempty"`
	// ID of the actual config used to process the request.
	ServiceConfigId string `protobuf:"bytes,4,opt,name=service_config_id,json=serviceConfigId,proto3" json:"service_config_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AllocateQuotaResponse) Reset() {
	*x = AllocateQuotaResponse{}
	mi := &file_google_api_servicecontrol_v1_quota_controller_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocateQuotaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateQuotaResponse) ProtoMessage() {}

func (x *AllocateQuotaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_quota_controller_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateQuotaResponse.ProtoReflect.Descriptor instead.
func (*AllocateQuotaResponse) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_quota_controller_proto_rawDescGZIP(), []int{2}
}

func (x *AllocateQuotaResponse) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *AllocateQuotaResponse) GetAllocateErrors() []*QuotaError {
	if x != nil {
		return x.AllocateErrors
	}
	return nil
}

func (x *AllocateQuotaResponse) GetQuotaMetrics() []*MetricValueSet {
	if x != nil {
		return x.QuotaMetrics
	}
	return nil
}

func (x *AllocateQuotaResponse) GetServiceConfigId() string {
	if x != nil {
		return x.ServiceConfigId
	}
	return ""
}

// Represents error information for [QuotaOperation][google.api.servicecontrol.v1.QuotaOperation].
type QuotaError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Error code.
	Code QuotaError_Code `protobuf:"varint,1,opt,name=code,proto3,enum=google.api.servicecontrol.v1.QuotaError_Code" json:"code,omitempty"`
	// Subject to whom this error applies. See the specific enum for more details
	// on this field. For example, "clientip:<ip address of client>" or
	// "project:<Google developer project id>".
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// Free-form text that provides details on the cause of the error.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Contains additional information about the quota error.
	// If available, `status.code` will be non zero.
	Status        *status.Status `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuotaError) Reset() {
	*x = QuotaError{}
	mi := &file_google_api_servicecontrol_v1_quota_controller_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuotaError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaError) ProtoMessage() {}

func (x *QuotaError) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_quota_controller_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaError.ProtoReflect.Descriptor instead.
func (*QuotaError) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_quota_controller_proto_rawDescGZIP(), []int{3}
}

func (x *QuotaError) GetCode() QuotaError_Code {
	if x != nil {
		return x.Code
	}
	return QuotaError_UNSPECIFIED
}

func (x *QuotaError) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *QuotaError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QuotaError) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_google_api_servicecontrol_v1_quota_controller_proto protoreflect.FileDescriptor

const file_google_api_servicecontrol_v1_quota_controller_proto_rawDesc = "" +
	"\n" +
	"3google/api/servicecontrol/v1/quota_controller.proto\x12\x1cgoogle.api.servicecontrol.v1\x1a(google/api/annotations/annotations.proto\x1a/google/api/servicecontrol/v1/metric_value.proto\x1a\x1egoogle/rpc/status/status.proto\x1a\x17google/api/client.proto\"\xc2\x01\n" +
	"\x14AllocateQuotaRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12[\n" +
	"\x12allocate_operation\x18\x02 \x01(\v2,.google.api.servicecontrol.v1.QuotaOperationR\x11allocateOperation\x12*\n" +
	"\x11service_config_id\x18\x04 \x01(\tR\x0fserviceConfigId\"\x98\x04\n" +
	"\x0eQuotaOperation\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x12\x1f\n" +
	"\vmethod_name\x18\x02 \x01(\tR\n" +
	"methodName\x12\x1f\n" +
	"\vconsumer_id\x18\x03 \x01(\tR\n" +
	"consumerId\x12P\n" +
	"\x06labels\x18\x04 \x03(\v28.google.api.servicecontrol.v1.QuotaOperation.LabelsEntryR\x06labels\x12Q\n" +
	"\rquota_metrics\x18\x05 \x03(\v2,.google.api.servicecontrol.v1.MetricValueSetR\fquotaMetrics\x12U\n" +
	"\n" +
	"quota_mode\x18\x06 \x01(\x0e26.google.api.servicecontrol.v1.QuotaOperation.QuotaModeR\tquotaMode\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"j\n" +
	"\tQuotaMode\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06NORMAL\x10\x01\x12\x0f\n" +
	"\vBEST_EFFORT\x10\x02\x12\x0e\n" +
	"\n" +
	"CHECK_ONLY\x10\x03\x12\x0e\n" +
	"\n" +
	"QUERY_ONLY\x10\x04\x12\x0f\n" +
	"\vADJUST_ONLY\x10\x05\"\x8c\x02\n" +
	"\x15AllocateQuotaResponse\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x12Q\n" +
	"\x0fallocate_errors\x18\x02 \x03(\v2(.google.api.servicecontrol.v1.QuotaErrorR\x0eallocateErrors\x12Q\n" +
	"\rquota_metrics\x18\x03 \x03(\v2,.google.api.servicecontrol.v1.MetricValueSetR\fquotaMetrics\x12*\n" +
	"\x11service_config_id\x18\x04 \x01(\tR\x0fserviceConfigId\"\xc0\x02\n" +
	"\n" +
	"QuotaError\x12A\n" +
	"\x04code\x18\x01 \x01(\x0e2-.google.api.servicecontrol.v1.QuotaError.CodeR\x04code\x12\x18\n" +
	"\asubject\x18\x02 \x01(\tR\asubject\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12*\n" +
	"\x06status\x18\x04 \x01(\v2\x12.google.rpc.StatusR\x06status\"\x86\x01\n" +
	"\x04Code\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12RESOURCE_EXHAUSTED\x10\b\x12\x16\n" +
	"\x12BILLING_NOT_ACTIVE\x10k\x12\x13\n" +
	"\x0fPROJECT_DELETED\x10l\x12\x13\n" +
	"\x0fAPI_KEY_INVALID\x10i\x12\x13\n" +
	"\x0fAPI_KEY_EXPIRED\x10p2\xc5\x02\n" +
	"\x0fQuotaController\x12\xae\x01\n" +
	"\rAllocateQuota\x122.google.api.servicecontrol.v1.AllocateQuotaRequest\x1a3.google.api.servicecontrol.v1.AllocateQuotaResponse\"4\x82\xd3\xe4\x93\x02.:\x01*\")/v1/services/{service_name}:allocateQuota\x1a\x80\x01\xcaA\x1dservicecontrol.googleapis.com\xd2A]https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/servicecontrolB\xef\x01\n" +
	" com.google.api.servicecontrol.v1B\x14QuotaControllerProtoP\x01ZJcloud.google.com/go/servicecontrol/apiv1/servicecontrolpb;servicecontrolpb\xf8\x01\x01\xaa\x02\x1eGoogle.Cloud.ServiceControl.V1\xca\x02\x1eGoogle\\Cloud\\ServiceControl\\V1\xea\x02!Google::Cloud::ServiceControl::V1b\x06proto3"

var (
	file_google_api_servicecontrol_v1_quota_controller_proto_rawDescOnce sync.Once
	file_google_api_servicecontrol_v1_quota_controller_proto_rawDescData []byte
)

func file_google_api_servicecontrol_v1_quota_controller_proto_rawDescGZIP() []byte {
	file_google_api_servicecontrol_v1_quota_controller_proto_rawDescOnce.Do(func() {
		file_google_api_servicecontrol_v1_quota_controller_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_api_servicecontrol_v1_quota_controller_proto_rawDesc), len(file_google_api_servicecontrol_v1_quota_controller_proto_rawDesc)))
	})
	return file_google_api_servicecontrol_v1_quota_controller_proto_rawDescData
}

var file_google_api_servicecontrol_v1_quota_controller_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_google_api_servicecontrol_v1_quota_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_google_api_servicecontrol_v1_quota_controller_proto_goTypes = []any{
	(QuotaOperation_QuotaMode)(0), // 0: google.api.servicecontrol.v1.QuotaOperation.QuotaMode
	(QuotaError_Code)(0),          // 1: google.api.servicecontrol.v1.QuotaError.Code
	(*AllocateQuotaRequest)(nil),  // 2: google.api.servicecontrol.v1.AllocateQuotaRequest
	(*QuotaOperation)(nil),        // 3: google.api.servicecontrol.v1.QuotaOperation
	(*AllocateQuotaResponse)(nil), // 4: google.api.servicecontrol.v1.AllocateQuotaResponse
	(*QuotaError)(nil),            // 5: google.api.servicecontrol.v1.QuotaError
	nil,                           // 6: google.api.servicecontrol.v1.QuotaOperation.LabelsEntry
	(*MetricValueSet)(nil),        // 7: google.api.servicecontrol.v1.MetricValueSet
	(*status.Status)(nil),         // 8: google.rpc.Status
}
var file_google_api_servicecontrol_v1_quota_controller_proto_depIdxs = []int32{
	3, // 0: google.api.servicecontrol.v1.AllocateQuotaRequest.allocate_operation:type_name -> google.api.servicecontrol.v1.QuotaOperation
	6, // 1: google.api.servicecontrol.v1.QuotaOperation.labels:type_name -> google.api.servicecontrol.v1.QuotaOperation.LabelsEntry
	7, // 2: google.api.servicecontrol.v1.QuotaOperation.quota_metrics:type_name -> google.api.servicecontrol.v1.MetricValueSet
	0, // 3: google.api.servicecontrol.v1.QuotaOperation.quota_mode:type_name -> google.api.servicecontrol.v1.QuotaOperation.QuotaMode
	5, // 4: google.api.servicecontrol.v1.AllocateQuotaResponse.allocate_errors:type_name -> google.api.servicecontrol.v1.QuotaError
	7, // 5: google.api.servicecontrol.v1.AllocateQuotaResponse.quota_metrics:type_name -> google.api.servicecontrol.v1.MetricValueSet
	1, // 6: google.api.servicecontrol.v1.QuotaError.code:type_name -> google.api.servicecontrol.v1.QuotaError.Code
	8, // 7: google.api.servicecontrol.v1.QuotaError.status:type_name -> google.rpc.Status
	2, // 8: google.api.servicecontrol.v1.QuotaController.AllocateQuota:input_type -> google.api.servicecontrol.v1.AllocateQuotaRequest
	4, // 9: google.api.servicecontrol.v1.QuotaController.AllocateQuota:output_type -> google.api.servicecontrol.v1.AllocateQuotaResponse
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_google_api_servicecontrol_v1_quota_controller_proto_init() }
func file_google_api_servicecontrol_v1_quota_controller_proto_init() {
	if File_google_api_servicecontrol_v1_quota_controller_proto != nil {
		return
	}
	file_google_api_servicecontrol_v1_metric_value_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_api_servicecontrol_v1_quota_controller_proto_rawDesc), len(file_google_api_servicecontrol_v1_quota_controller_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_api_servicecontrol_v1_quota_controller_proto_goTypes,
		DependencyIndexes: file_google_api_servicecontrol_v1_quota_controller_proto_depIdxs,
		EnumInfos:         file_google_api_servicecontrol_v1_quota_controller_proto_enumTypes,
		MessageInfos:      file_google_api_servicecontrol_v1_quota_controller_proto_msgTypes,
	}.Build()
	File_google_api_servicecontrol_v1_quota_controller_proto = out.File
	file_google_api_servicecontrol_v1_quota_controller_proto_goTypes = nil
	file_google_api_servicecontrol_v1_quota_controller_proto_depIdxs = nil
}
