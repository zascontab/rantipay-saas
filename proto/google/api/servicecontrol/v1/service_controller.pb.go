// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/api/servicecontrol/v1/service_controller.proto

package servicecontrolpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The type of the consumer as defined in
// [Google Resource Manager](https://cloud.google.com/resource-manager/).
type CheckResponse_ConsumerInfo_ConsumerType int32

const (
	// This is never used.
	CheckResponse_ConsumerInfo_CONSUMER_TYPE_UNSPECIFIED CheckResponse_ConsumerInfo_ConsumerType = 0
	// The consumer is a Google Cloud Project.
	CheckResponse_ConsumerInfo_PROJECT CheckResponse_ConsumerInfo_ConsumerType = 1
	// The consumer is a Google Cloud Folder.
	CheckResponse_ConsumerInfo_FOLDER CheckResponse_ConsumerInfo_ConsumerType = 2
	// The consumer is a Google Cloud Organization.
	CheckResponse_ConsumerInfo_ORGANIZATION CheckResponse_ConsumerInfo_ConsumerType = 3
	// Service-specific resource container which is defined by the service
	// producer to offer their users the ability to manage service control
	// functionalities at a finer level of granularity than the PROJECT.
	CheckResponse_ConsumerInfo_SERVICE_SPECIFIC CheckResponse_ConsumerInfo_ConsumerType = 4
)

// Enum value maps for CheckResponse_ConsumerInfo_ConsumerType.
var (
	CheckResponse_ConsumerInfo_ConsumerType_name = map[int32]string{
		0: "CONSUMER_TYPE_UNSPECIFIED",
		1: "PROJECT",
		2: "FOLDER",
		3: "ORGANIZATION",
		4: "SERVICE_SPECIFIC",
	}
	CheckResponse_ConsumerInfo_ConsumerType_value = map[string]int32{
		"CONSUMER_TYPE_UNSPECIFIED": 0,
		"PROJECT":                   1,
		"FOLDER":                    2,
		"ORGANIZATION":              3,
		"SERVICE_SPECIFIC":          4,
	}
)

func (x CheckResponse_ConsumerInfo_ConsumerType) Enum() *CheckResponse_ConsumerInfo_ConsumerType {
	p := new(CheckResponse_ConsumerInfo_ConsumerType)
	*p = x
	return p
}

func (x CheckResponse_ConsumerInfo_ConsumerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckResponse_ConsumerInfo_ConsumerType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_api_servicecontrol_v1_service_controller_proto_enumTypes[0].Descriptor()
}

func (CheckResponse_ConsumerInfo_ConsumerType) Type() protoreflect.EnumType {
	return &file_google_api_servicecontrol_v1_service_controller_proto_enumTypes[0]
}

func (x CheckResponse_ConsumerInfo_ConsumerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckResponse_ConsumerInfo_ConsumerType.Descriptor instead.
func (CheckResponse_ConsumerInfo_ConsumerType) EnumDescriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_service_controller_proto_rawDescGZIP(), []int{1, 1, 0}
}

// Request message for the Check method.
type CheckRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The service name as specified in its service configuration. For example,
	// `"pubsub.googleapis.com"`.
	//
	// See
	// [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)
	// for the definition of a service name.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// The operation to be checked.
	Operation *Operation `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	// Specifies which version of service configuration should be used to process
	// the request.
	//
	// If unspecified or no matching version can be found, the
	// latest one will be used.
	ServiceConfigId string `protobuf:"bytes,4,opt,name=service_config_id,json=serviceConfigId,proto3" json:"service_config_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_service_controller_proto_rawDescGZIP(), []int{0}
}

func (x *CheckRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *CheckRequest) GetOperation() *Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *CheckRequest) GetServiceConfigId() string {
	if x != nil {
		return x.ServiceConfigId
	}
	return ""
}

// Response message for the Check method.
type CheckResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The same operation_id value used in the
	// [CheckRequest][google.api.servicecontrol.v1.CheckRequest]. Used for logging
	// and diagnostics purposes.
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Indicate the decision of the check.
	//
	// If no check errors are present, the service should process the operation.
	// Otherwise the service should use the list of errors to determine the
	// appropriate action.
	CheckErrors []*CheckError `protobuf:"bytes,2,rep,name=check_errors,json=checkErrors,proto3" json:"check_errors,omitempty"`
	// The actual config id used to process the request.
	ServiceConfigId string `protobuf:"bytes,5,opt,name=service_config_id,json=serviceConfigId,proto3" json:"service_config_id,omitempty"`
	// The current service rollout id used to process the request.
	ServiceRolloutId string `protobuf:"bytes,11,opt,name=service_rollout_id,json=serviceRolloutId,proto3" json:"service_rollout_id,omitempty"`
	// Feedback data returned from the server during processing a Check request.
	CheckInfo     *CheckResponse_CheckInfo `protobuf:"bytes,6,opt,name=check_info,json=checkInfo,proto3" json:"check_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckResponse) Reset() {
	*x = CheckResponse{}
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse) ProtoMessage() {}

func (x *CheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse.ProtoReflect.Descriptor instead.
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_service_controller_proto_rawDescGZIP(), []int{1}
}

func (x *CheckResponse) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *CheckResponse) GetCheckErrors() []*CheckError {
	if x != nil {
		return x.CheckErrors
	}
	return nil
}

func (x *CheckResponse) GetServiceConfigId() string {
	if x != nil {
		return x.ServiceConfigId
	}
	return ""
}

func (x *CheckResponse) GetServiceRolloutId() string {
	if x != nil {
		return x.ServiceRolloutId
	}
	return ""
}

func (x *CheckResponse) GetCheckInfo() *CheckResponse_CheckInfo {
	if x != nil {
		return x.CheckInfo
	}
	return nil
}

// Request message for the Report method.
type ReportRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The service name as specified in its service configuration. For example,
	// `"pubsub.googleapis.com"`.
	//
	// See
	// [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)
	// for the definition of a service name.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Operations to be reported.
	//
	// Typically the service should report one operation per request.
	// Putting multiple operations into a single request is allowed, but should
	// be used only when multiple operations are natually available at the time
	// of the report.
	//
	// There is no limit on the number of operations in the same ReportRequest,
	// however the ReportRequest size should be no larger than 1MB. See
	// [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors]
	// for partial failure behavior.
	Operations []*Operation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	// Specifies which version of service config should be used to process the
	// request.
	//
	// If unspecified or no matching version can be found, the
	// latest one will be used.
	ServiceConfigId string `protobuf:"bytes,3,opt,name=service_config_id,json=serviceConfigId,proto3" json:"service_config_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReportRequest) Reset() {
	*x = ReportRequest{}
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest) ProtoMessage() {}

func (x *ReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest.ProtoReflect.Descriptor instead.
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_service_controller_proto_rawDescGZIP(), []int{2}
}

func (x *ReportRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ReportRequest) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ReportRequest) GetServiceConfigId() string {
	if x != nil {
		return x.ServiceConfigId
	}
	return ""
}

// Response message for the Report method.
type ReportResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Partial failures, one for each `Operation` in the request that failed
	// processing. There are three possible combinations of the RPC status:
	//
	//  1. The combination of a successful RPC status and an empty `report_errors`
	//     list indicates a complete success where all `Operations` in the
	//     request are processed successfully.
	//  2. The combination of a successful RPC status and a non-empty
	//     `report_errors` list indicates a partial success where some
	//     `Operations` in the request succeeded. Each
	//     `Operation` that failed processing has a corresponding item
	//     in this list.
	//  3. A failed RPC status indicates a general non-deterministic failure.
	//     When this happens, it's impossible to know which of the
	//     'Operations' in the request succeeded or failed.
	ReportErrors []*ReportResponse_ReportError `protobuf:"bytes,1,rep,name=report_errors,json=reportErrors,proto3" json:"report_errors,omitempty"`
	// The actual config id used to process the request.
	ServiceConfigId string `protobuf:"bytes,2,opt,name=service_config_id,json=serviceConfigId,proto3" json:"service_config_id,omitempty"`
	// The current service rollout id used to process the request.
	ServiceRolloutId string `protobuf:"bytes,4,opt,name=service_rollout_id,json=serviceRolloutId,proto3" json:"service_rollout_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReportResponse) Reset() {
	*x = ReportResponse{}
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportResponse) ProtoMessage() {}

func (x *ReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportResponse.ProtoReflect.Descriptor instead.
func (*ReportResponse) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_service_controller_proto_rawDescGZIP(), []int{3}
}

func (x *ReportResponse) GetReportErrors() []*ReportResponse_ReportError {
	if x != nil {
		return x.ReportErrors
	}
	return nil
}

func (x *ReportResponse) GetServiceConfigId() string {
	if x != nil {
		return x.ServiceConfigId
	}
	return ""
}

func (x *ReportResponse) GetServiceRolloutId() string {
	if x != nil {
		return x.ServiceRolloutId
	}
	return ""
}

// Contains additional information about the check operation.
type CheckResponse_CheckInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of fields and label keys that are ignored by the server.
	// The client doesn't need to send them for following requests to improve
	// performance and allow better aggregation.
	UnusedArguments []string `protobuf:"bytes,1,rep,name=unused_arguments,json=unusedArguments,proto3" json:"unused_arguments,omitempty"`
	// Consumer info of this check.
	ConsumerInfo *CheckResponse_ConsumerInfo `protobuf:"bytes,2,opt,name=consumer_info,json=consumerInfo,proto3" json:"consumer_info,omitempty"`
	// The unique id of the api key in the format of "apikey:<UID>".
	// This field will be populated when the consumer passed to Service Control
	// is an API key and all the API key related validations are successful.
	ApiKeyUid     string `protobuf:"bytes,5,opt,name=api_key_uid,json=apiKeyUid,proto3" json:"api_key_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckResponse_CheckInfo) Reset() {
	*x = CheckResponse_CheckInfo{}
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResponse_CheckInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse_CheckInfo) ProtoMessage() {}

func (x *CheckResponse_CheckInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse_CheckInfo.ProtoReflect.Descriptor instead.
func (*CheckResponse_CheckInfo) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_service_controller_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CheckResponse_CheckInfo) GetUnusedArguments() []string {
	if x != nil {
		return x.UnusedArguments
	}
	return nil
}

func (x *CheckResponse_CheckInfo) GetConsumerInfo() *CheckResponse_ConsumerInfo {
	if x != nil {
		return x.ConsumerInfo
	}
	return nil
}

func (x *CheckResponse_CheckInfo) GetApiKeyUid() string {
	if x != nil {
		return x.ApiKeyUid
	}
	return ""
}

// `ConsumerInfo` provides information about the consumer.
type CheckResponse_ConsumerInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Google cloud project number, e.g. 1234567890. A value of 0 indicates
	// no project number is found.
	//
	// NOTE: This field is deprecated after we support flexible consumer
	// id. New code should not depend on this field anymore.
	ProjectNumber int64 `protobuf:"varint,1,opt,name=project_number,json=projectNumber,proto3" json:"project_number,omitempty"`
	// The type of the consumer which should have been defined in
	// [Google Resource Manager](https://cloud.google.com/resource-manager/).
	Type CheckResponse_ConsumerInfo_ConsumerType `protobuf:"varint,2,opt,name=type,proto3,enum=google.api.servicecontrol.v1.CheckResponse_ConsumerInfo_ConsumerType" json:"type,omitempty"`
	// The consumer identity number, can be Google cloud project number, folder
	// number or organization number e.g. 1234567890. A value of 0 indicates no
	// consumer number is found.
	ConsumerNumber int64 `protobuf:"varint,3,opt,name=consumer_number,json=consumerNumber,proto3" json:"consumer_number,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CheckResponse_ConsumerInfo) Reset() {
	*x = CheckResponse_ConsumerInfo{}
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResponse_ConsumerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse_ConsumerInfo) ProtoMessage() {}

func (x *CheckResponse_ConsumerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse_ConsumerInfo.ProtoReflect.Descriptor instead.
func (*CheckResponse_ConsumerInfo) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_service_controller_proto_rawDescGZIP(), []int{1, 1}
}

func (x *CheckResponse_ConsumerInfo) GetProjectNumber() int64 {
	if x != nil {
		return x.ProjectNumber
	}
	return 0
}

func (x *CheckResponse_ConsumerInfo) GetType() CheckResponse_ConsumerInfo_ConsumerType {
	if x != nil {
		return x.Type
	}
	return CheckResponse_ConsumerInfo_CONSUMER_TYPE_UNSPECIFIED
}

func (x *CheckResponse_ConsumerInfo) GetConsumerNumber() int64 {
	if x != nil {
		return x.ConsumerNumber
	}
	return 0
}

// Represents the processing error of one
// [Operation][google.api.servicecontrol.v1.Operation] in the request.
type ReportResponse_ReportError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The
	// [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
	// value from the request.
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Details of the error when processing the
	// [Operation][google.api.servicecontrol.v1.Operation].
	Status        *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportResponse_ReportError) Reset() {
	*x = ReportResponse_ReportError{}
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportResponse_ReportError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportResponse_ReportError) ProtoMessage() {}

func (x *ReportResponse_ReportError) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_servicecontrol_v1_service_controller_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportResponse_ReportError.ProtoReflect.Descriptor instead.
func (*ReportResponse_ReportError) Descriptor() ([]byte, []int) {
	return file_google_api_servicecontrol_v1_service_controller_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ReportResponse_ReportError) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *ReportResponse_ReportError) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_google_api_servicecontrol_v1_service_controller_proto protoreflect.FileDescriptor

const file_google_api_servicecontrol_v1_service_controller_proto_rawDesc = "" +
	"\n" +
	"5google/api/servicecontrol/v1/service_controller.proto\x12\x1cgoogle.api.servicecontrol.v1\x1a(google/api/annotations/annotations.proto\x1a\x17google/api/client.proto\x1a.google/api/servicecontrol/v1/check_error.proto\x1a,google/api/servicecontrol/v1/operation.proto\x1a\x1egoogle/rpc/status/status.proto\"\xa4\x01\n" +
	"\fCheckRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12E\n" +
	"\toperation\x18\x02 \x01(\v2'.google.api.servicecontrol.v1.OperationR\toperation\x12*\n" +
	"\x11service_config_id\x18\x04 \x01(\tR\x0fserviceConfigId\"\x93\x06\n" +
	"\rCheckResponse\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x12K\n" +
	"\fcheck_errors\x18\x02 \x03(\v2(.google.api.servicecontrol.v1.CheckErrorR\vcheckErrors\x12*\n" +
	"\x11service_config_id\x18\x05 \x01(\tR\x0fserviceConfigId\x12,\n" +
	"\x12service_rollout_id\x18\v \x01(\tR\x10serviceRolloutId\x12T\n" +
	"\n" +
	"check_info\x18\x06 \x01(\v25.google.api.servicecontrol.v1.CheckResponse.CheckInfoR\tcheckInfo\x1a\xb5\x01\n" +
	"\tCheckInfo\x12)\n" +
	"\x10unused_arguments\x18\x01 \x03(\tR\x0funusedArguments\x12]\n" +
	"\rconsumer_info\x18\x02 \x01(\v28.google.api.servicecontrol.v1.CheckResponse.ConsumerInfoR\fconsumerInfo\x12\x1e\n" +
	"\vapi_key_uid\x18\x05 \x01(\tR\tapiKeyUid\x1a\xa9\x02\n" +
	"\fConsumerInfo\x12%\n" +
	"\x0eproject_number\x18\x01 \x01(\x03R\rprojectNumber\x12Y\n" +
	"\x04type\x18\x02 \x01(\x0e2E.google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.ConsumerTypeR\x04type\x12'\n" +
	"\x0fconsumer_number\x18\x03 \x01(\x03R\x0econsumerNumber\"n\n" +
	"\fConsumerType\x12\x1d\n" +
	"\x19CONSUMER_TYPE_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aPROJECT\x10\x01\x12\n" +
	"\n" +
	"\x06FOLDER\x10\x02\x12\x10\n" +
	"\fORGANIZATION\x10\x03\x12\x14\n" +
	"\x10SERVICE_SPECIFIC\x10\x04\"\xa7\x01\n" +
	"\rReportRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12G\n" +
	"\n" +
	"operations\x18\x02 \x03(\v2'.google.api.servicecontrol.v1.OperationR\n" +
	"operations\x12*\n" +
	"\x11service_config_id\x18\x03 \x01(\tR\x0fserviceConfigId\"\xa7\x02\n" +
	"\x0eReportResponse\x12]\n" +
	"\rreport_errors\x18\x01 \x03(\v28.google.api.servicecontrol.v1.ReportResponse.ReportErrorR\freportErrors\x12*\n" +
	"\x11service_config_id\x18\x02 \x01(\tR\x0fserviceConfigId\x12,\n" +
	"\x12service_rollout_id\x18\x04 \x01(\tR\x10serviceRolloutId\x1a\\\n" +
	"\vReportError\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x12*\n" +
	"\x06status\x18\x02 \x01(\v2\x12.google.rpc.StatusR\x06status2\xbc\x03\n" +
	"\x11ServiceController\x12\x8e\x01\n" +
	"\x05Check\x12*.google.api.servicecontrol.v1.CheckRequest\x1a+.google.api.servicecontrol.v1.CheckResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/v1/services/{service_name}:check\x12\x92\x01\n" +
	"\x06Report\x12+.google.api.servicecontrol.v1.ReportRequest\x1a,.google.api.servicecontrol.v1.ReportResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/services/{service_name}:report\x1a\x80\x01\xcaA\x1dservicecontrol.googleapis.com\xd2A]https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/servicecontrolB\xf8\x01\n" +
	" com.google.api.servicecontrol.v1B\x16ServiceControllerProtoP\x01ZJcloud.google.com/go/servicecontrol/apiv1/servicecontrolpb;servicecontrolpb\xf8\x01\x01\xa2\x02\x04GASC\xaa\x02\x1eGoogle.Cloud.ServiceControl.V1\xca\x02\x1eGoogle\\Cloud\\ServiceControl\\V1\xea\x02!Google::Cloud::ServiceControl::V1b\x06proto3"

var (
	file_google_api_servicecontrol_v1_service_controller_proto_rawDescOnce sync.Once
	file_google_api_servicecontrol_v1_service_controller_proto_rawDescData []byte
)

func file_google_api_servicecontrol_v1_service_controller_proto_rawDescGZIP() []byte {
	file_google_api_servicecontrol_v1_service_controller_proto_rawDescOnce.Do(func() {
		file_google_api_servicecontrol_v1_service_controller_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_api_servicecontrol_v1_service_controller_proto_rawDesc), len(file_google_api_servicecontrol_v1_service_controller_proto_rawDesc)))
	})
	return file_google_api_servicecontrol_v1_service_controller_proto_rawDescData
}

var file_google_api_servicecontrol_v1_service_controller_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_api_servicecontrol_v1_service_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_google_api_servicecontrol_v1_service_controller_proto_goTypes = []any{
	(CheckResponse_ConsumerInfo_ConsumerType)(0), // 0: google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.ConsumerType
	(*CheckRequest)(nil),                         // 1: google.api.servicecontrol.v1.CheckRequest
	(*CheckResponse)(nil),                        // 2: google.api.servicecontrol.v1.CheckResponse
	(*ReportRequest)(nil),                        // 3: google.api.servicecontrol.v1.ReportRequest
	(*ReportResponse)(nil),                       // 4: google.api.servicecontrol.v1.ReportResponse
	(*CheckResponse_CheckInfo)(nil),              // 5: google.api.servicecontrol.v1.CheckResponse.CheckInfo
	(*CheckResponse_ConsumerInfo)(nil),           // 6: google.api.servicecontrol.v1.CheckResponse.ConsumerInfo
	(*ReportResponse_ReportError)(nil),           // 7: google.api.servicecontrol.v1.ReportResponse.ReportError
	(*Operation)(nil),                            // 8: google.api.servicecontrol.v1.Operation
	(*CheckError)(nil),                           // 9: google.api.servicecontrol.v1.CheckError
	(*status.Status)(nil),                        // 10: google.rpc.Status
}
var file_google_api_servicecontrol_v1_service_controller_proto_depIdxs = []int32{
	8,  // 0: google.api.servicecontrol.v1.CheckRequest.operation:type_name -> google.api.servicecontrol.v1.Operation
	9,  // 1: google.api.servicecontrol.v1.CheckResponse.check_errors:type_name -> google.api.servicecontrol.v1.CheckError
	5,  // 2: google.api.servicecontrol.v1.CheckResponse.check_info:type_name -> google.api.servicecontrol.v1.CheckResponse.CheckInfo
	8,  // 3: google.api.servicecontrol.v1.ReportRequest.operations:type_name -> google.api.servicecontrol.v1.Operation
	7,  // 4: google.api.servicecontrol.v1.ReportResponse.report_errors:type_name -> google.api.servicecontrol.v1.ReportResponse.ReportError
	6,  // 5: google.api.servicecontrol.v1.CheckResponse.CheckInfo.consumer_info:type_name -> google.api.servicecontrol.v1.CheckResponse.ConsumerInfo
	0,  // 6: google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.type:type_name -> google.api.servicecontrol.v1.CheckResponse.ConsumerInfo.ConsumerType
	10, // 7: google.api.servicecontrol.v1.ReportResponse.ReportError.status:type_name -> google.rpc.Status
	1,  // 8: google.api.servicecontrol.v1.ServiceController.Check:input_type -> google.api.servicecontrol.v1.CheckRequest
	3,  // 9: google.api.servicecontrol.v1.ServiceController.Report:input_type -> google.api.servicecontrol.v1.ReportRequest
	2,  // 10: google.api.servicecontrol.v1.ServiceController.Check:output_type -> google.api.servicecontrol.v1.CheckResponse
	4,  // 11: google.api.servicecontrol.v1.ServiceController.Report:output_type -> google.api.servicecontrol.v1.ReportResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_google_api_servicecontrol_v1_service_controller_proto_init() }
func file_google_api_servicecontrol_v1_service_controller_proto_init() {
	if File_google_api_servicecontrol_v1_service_controller_proto != nil {
		return
	}
	file_google_api_servicecontrol_v1_check_error_proto_init()
	file_google_api_servicecontrol_v1_operation_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_api_servicecontrol_v1_service_controller_proto_rawDesc), len(file_google_api_servicecontrol_v1_service_controller_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_api_servicecontrol_v1_service_controller_proto_goTypes,
		DependencyIndexes: file_google_api_servicecontrol_v1_service_controller_proto_depIdxs,
		EnumInfos:         file_google_api_servicecontrol_v1_service_controller_proto_enumTypes,
		MessageInfos:      file_google_api_servicecontrol_v1_service_controller_proto_msgTypes,
	}.Build()
	File_google_api_servicecontrol_v1_service_controller_proto = out.File
	file_google_api_servicecontrol_v1_service_controller_proto_goTypes = nil
	file_google_api_servicecontrol_v1_service_controller_proto_depIdxs = nil
}
