// Code generated by protoc-gen-go-grpc-proxy. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc-proxy v1.2.0
// - protoc             (unknown)
// source: google/api/serviceusage/v1/serviceusage.proto

package serviceusagepb

import (
	longrunningpb "cloud.google.com/go/longrunning/autogen/longrunningpb"
	context "context"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var _ ServiceUsageServer = (*serviceUsageClientProxy)(nil)

// serviceUsageClientProxy is the proxy to turn ServiceUsage client to server interface.
type serviceUsageClientProxy struct {
	cc ServiceUsageClient
}

func NewServiceUsageClientProxy(cc ServiceUsageClient) ServiceUsageServer {
	return &serviceUsageClientProxy{cc}
}

func (c *serviceUsageClientProxy) EnableService(ctx context.Context, in *EnableServiceRequest) (*longrunningpb.Operation, error) {
	return c.cc.EnableService(ctx, in)
}
func (c *serviceUsageClientProxy) DisableService(ctx context.Context, in *DisableServiceRequest) (*longrunningpb.Operation, error) {
	return c.cc.DisableService(ctx, in)
}
func (c *serviceUsageClientProxy) GetService(ctx context.Context, in *GetServiceRequest) (*Service, error) {
	return c.cc.GetService(ctx, in)
}
func (c *serviceUsageClientProxy) ListServices(ctx context.Context, in *ListServicesRequest) (*ListServicesResponse, error) {
	return c.cc.ListServices(ctx, in)
}
func (c *serviceUsageClientProxy) BatchEnableServices(ctx context.Context, in *BatchEnableServicesRequest) (*longrunningpb.Operation, error) {
	return c.cc.BatchEnableServices(ctx, in)
}
func (c *serviceUsageClientProxy) BatchGetServices(ctx context.Context, in *BatchGetServicesRequest) (*BatchGetServicesResponse, error) {
	return c.cc.BatchGetServices(ctx, in)
}
