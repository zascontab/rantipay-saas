// Code generated by protoc-gen-go-grpc-proxy. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc-proxy v1.2.0
// - protoc             (unknown)
// source: google/api/apikeys/v2/apikeys.proto

package apikeyspb

import (
	longrunningpb "cloud.google.com/go/longrunning/autogen/longrunningpb"
	context "context"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var _ ApiKeysServer = (*apiKeysClientProxy)(nil)

// apiKeysClientProxy is the proxy to turn ApiKeys client to server interface.
type apiKeysClientProxy struct {
	cc ApiKeysClient
}

func NewApiKeysClientProxy(cc ApiKeysClient) ApiKeysServer {
	return &apiKeysClientProxy{cc}
}

func (c *apiKeysClientProxy) CreateKey(ctx context.Context, in *CreateKeyRequest) (*longrunningpb.Operation, error) {
	return c.cc.CreateKey(ctx, in)
}
func (c *apiKeysClientProxy) ListKeys(ctx context.Context, in *ListKeysRequest) (*ListKeysResponse, error) {
	return c.cc.ListKeys(ctx, in)
}
func (c *apiKeysClientProxy) GetKey(ctx context.Context, in *GetKeyRequest) (*Key, error) {
	return c.cc.GetKey(ctx, in)
}
func (c *apiKeysClientProxy) GetKeyString(ctx context.Context, in *GetKeyStringRequest) (*GetKeyStringResponse, error) {
	return c.cc.GetKeyString(ctx, in)
}
func (c *apiKeysClientProxy) UpdateKey(ctx context.Context, in *UpdateKeyRequest) (*longrunningpb.Operation, error) {
	return c.cc.UpdateKey(ctx, in)
}
func (c *apiKeysClientProxy) DeleteKey(ctx context.Context, in *DeleteKeyRequest) (*longrunningpb.Operation, error) {
	return c.cc.DeleteKey(ctx, in)
}
func (c *apiKeysClientProxy) UndeleteKey(ctx context.Context, in *UndeleteKeyRequest) (*longrunningpb.Operation, error) {
	return c.cc.UndeleteKey(ctx, in)
}
func (c *apiKeysClientProxy) LookupKey(ctx context.Context, in *LookupKeyRequest) (*LookupKeyResponse, error) {
	return c.cc.LookupKey(ctx, in)
}
