// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: google/api/monitoring.proto

package serviceconfig

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Monitoring configuration of the service.
//
// The example below shows how to configure monitored resources and metrics
// for monitoring. In the example, a monitored resource and two metrics are
// defined. The `library.googleapis.com/book/returned_count` metric is sent
// to both producer and consumer projects, whereas the
// `library.googleapis.com/book/num_overdue` metric is only sent to the
// consumer project.
//
//	monitored_resources:
//	- type: library.googleapis.com/Branch
//	  display_name: "Library Branch"
//	  description: "A branch of a library."
//	  launch_stage: GA
//	  labels:
//	  - key: resource_container
//	    description: "The Cloud container (ie. project id) for the Branch."
//	  - key: location
//	    description: "The location of the library branch."
//	  - key: branch_id
//	    description: "The id of the branch."
//	metrics:
//	- name: library.googleapis.com/book/returned_count
//	  display_name: "Books Returned"
//	  description: "The count of books that have been returned."
//	  launch_stage: GA
//	  metric_kind: DELTA
//	  value_type: INT64
//	  unit: "1"
//	  labels:
//	  - key: customer_id
//	    description: "The id of the customer."
//	- name: library.googleapis.com/book/num_overdue
//	  display_name: "Books Overdue"
//	  description: "The current number of overdue books."
//	  launch_stage: GA
//	  metric_kind: GAUGE
//	  value_type: INT64
//	  unit: "1"
//	  labels:
//	  - key: customer_id
//	    description: "The id of the customer."
//	monitoring:
//	  producer_destinations:
//	  - monitored_resource: library.googleapis.com/Branch
//	    metrics:
//	    - library.googleapis.com/book/returned_count
//	  consumer_destinations:
//	  - monitored_resource: library.googleapis.com/Branch
//	    metrics:
//	    - library.googleapis.com/book/returned_count
//	    - library.googleapis.com/book/num_overdue
type Monitoring struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Monitoring configurations for sending metrics to the producer project.
	// There can be multiple producer destinations. A monitored resource type may
	// appear in multiple monitoring destinations if different aggregations are
	// needed for different sets of metrics associated with that monitored
	// resource type. A monitored resource and metric pair may only be used once
	// in the Monitoring configuration.
	ProducerDestinations []*Monitoring_MonitoringDestination `protobuf:"bytes,1,rep,name=producer_destinations,json=producerDestinations,proto3" json:"producer_destinations,omitempty"`
	// Monitoring configurations for sending metrics to the consumer project.
	// There can be multiple consumer destinations. A monitored resource type may
	// appear in multiple monitoring destinations if different aggregations are
	// needed for different sets of metrics associated with that monitored
	// resource type. A monitored resource and metric pair may only be used once
	// in the Monitoring configuration.
	ConsumerDestinations []*Monitoring_MonitoringDestination `protobuf:"bytes,2,rep,name=consumer_destinations,json=consumerDestinations,proto3" json:"consumer_destinations,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Monitoring) Reset() {
	*x = Monitoring{}
	mi := &file_google_api_monitoring_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Monitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monitoring) ProtoMessage() {}

func (x *Monitoring) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_monitoring_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monitoring.ProtoReflect.Descriptor instead.
func (*Monitoring) Descriptor() ([]byte, []int) {
	return file_google_api_monitoring_proto_rawDescGZIP(), []int{0}
}

func (x *Monitoring) GetProducerDestinations() []*Monitoring_MonitoringDestination {
	if x != nil {
		return x.ProducerDestinations
	}
	return nil
}

func (x *Monitoring) GetConsumerDestinations() []*Monitoring_MonitoringDestination {
	if x != nil {
		return x.ConsumerDestinations
	}
	return nil
}

// Configuration of a specific monitoring destination (the producer project
// or the consumer project).
type Monitoring_MonitoringDestination struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The monitored resource type. The type must be defined in
	// [Service.monitored_resources][google.api.Service.monitored_resources]
	// section.
	MonitoredResource string `protobuf:"bytes,1,opt,name=monitored_resource,json=monitoredResource,proto3" json:"monitored_resource,omitempty"`
	// Types of the metrics to report to this monitoring destination.
	// Each type must be defined in
	// [Service.metrics][google.api.Service.metrics] section.
	Metrics       []string `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Monitoring_MonitoringDestination) Reset() {
	*x = Monitoring_MonitoringDestination{}
	mi := &file_google_api_monitoring_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Monitoring_MonitoringDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monitoring_MonitoringDestination) ProtoMessage() {}

func (x *Monitoring_MonitoringDestination) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_monitoring_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monitoring_MonitoringDestination.ProtoReflect.Descriptor instead.
func (*Monitoring_MonitoringDestination) Descriptor() ([]byte, []int) {
	return file_google_api_monitoring_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Monitoring_MonitoringDestination) GetMonitoredResource() string {
	if x != nil {
		return x.MonitoredResource
	}
	return ""
}

func (x *Monitoring_MonitoringDestination) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_google_api_monitoring_proto protoreflect.FileDescriptor

const file_google_api_monitoring_proto_rawDesc = "" +
	"\n" +
	"\x1bgoogle/api/monitoring.proto\x12\n" +
	"google.api\"\xb4\x02\n" +
	"\n" +
	"Monitoring\x12a\n" +
	"\x15producer_destinations\x18\x01 \x03(\v2,.google.api.Monitoring.MonitoringDestinationR\x14producerDestinations\x12a\n" +
	"\x15consumer_destinations\x18\x02 \x03(\v2,.google.api.Monitoring.MonitoringDestinationR\x14consumerDestinations\x1a`\n" +
	"\x15MonitoringDestination\x12-\n" +
	"\x12monitored_resource\x18\x01 \x01(\tR\x11monitoredResource\x12\x18\n" +
	"\ametrics\x18\x02 \x03(\tR\ametricsBq\n" +
	"\x0ecom.google.apiB\x0fMonitoringProtoP\x01ZEgoogle.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig\xa2\x02\x04GAPIb\x06proto3"

var (
	file_google_api_monitoring_proto_rawDescOnce sync.Once
	file_google_api_monitoring_proto_rawDescData []byte
)

func file_google_api_monitoring_proto_rawDescGZIP() []byte {
	file_google_api_monitoring_proto_rawDescOnce.Do(func() {
		file_google_api_monitoring_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_api_monitoring_proto_rawDesc), len(file_google_api_monitoring_proto_rawDesc)))
	})
	return file_google_api_monitoring_proto_rawDescData
}

var file_google_api_monitoring_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_google_api_monitoring_proto_goTypes = []any{
	(*Monitoring)(nil),                       // 0: google.api.Monitoring
	(*Monitoring_MonitoringDestination)(nil), // 1: google.api.Monitoring.MonitoringDestination
}
var file_google_api_monitoring_proto_depIdxs = []int32{
	1, // 0: google.api.Monitoring.producer_destinations:type_name -> google.api.Monitoring.MonitoringDestination
	1, // 1: google.api.Monitoring.consumer_destinations:type_name -> google.api.Monitoring.MonitoringDestination
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_google_api_monitoring_proto_init() }
func file_google_api_monitoring_proto_init() {
	if File_google_api_monitoring_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_api_monitoring_proto_rawDesc), len(file_google_api_monitoring_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_api_monitoring_proto_goTypes,
		DependencyIndexes: file_google_api_monitoring_proto_depIdxs,
		MessageInfos:      file_google_api_monitoring_proto_msgTypes,
	}.Build()
	File_google_api_monitoring_proto = out.File
	file_google_api_monitoring_proto_goTypes = nil
	file_google_api_monitoring_proto_depIdxs = nil
}
