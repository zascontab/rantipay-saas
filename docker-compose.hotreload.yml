version: '3.7'
services:
  # Servicios para hot reload
  user:
    image: golang:1.20
    volumes:
      - ./:/app
    working_dir: /app/user
    command: >
      sh -c "go install github.com/githubnemo/CompileDaemon@latest && 
             CompileDaemon --build='go build -o ./tmp/main ./cmd/user/main.go' 
                          --command='./tmp/main -conf ../configs.dev/config.yaml' 
                          --directory='./' 
                          --pattern='(.+\.go|.+\.yaml)$$'"
    environment:
      - DATA_DATABASE_SOURCE=root:youShouldChangeThis@tcp(mysqld:3306)/user_db
      - ETCD_ADDRESS=etcd:2379
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=youShouldChangeThis
    depends_on:
      - mysqld
      - redis
      - etcd
    ports:
      - "8000:8000"

  saas:
    image: golang:1.20
    volumes:
      - ./:/app
    working_dir: /app/saas
    command: >
      sh -c "go install github.com/githubnemo/CompileDaemon@latest && 
             CompileDaemon --build='go build -o ./tmp/main ./cmd/saas/main.go' 
                          --command='./tmp/main -conf ../configs.dev/saas.yaml' 
                          --directory='./' 
                          --pattern='(.+\.go|.+\.yaml)$$'"
    environment:
      - DATA_DATABASE_SOURCE=root:youShouldChangeThis@tcp(mysqld:3306)/saas_db
      - ETCD_ADDRESS=etcd:2379
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=youShouldChangeThis
    depends_on:
      - mysqld
      - redis
      - etcd
    ports:
      - "8001:8001"

  sys:
    image: golang:1.20
    volumes:
      - ./:/app
    working_dir: /app/sys
    command: >
      sh -c "go install github.com/githubnemo/CompileDaemon@latest && 
             CompileDaemon --build='go build -o ./tmp/main ./cmd/sys/main.go' 
                          --command='./tmp/main -conf ../configs.dev/sys.yaml' 
                          --directory='./' 
                          --pattern='(.+\.go|.+\.yaml)$$'"
    environment:
      - DATA_DATABASE_SOURCE=root:youShouldChangeThis@tcp(mysqld:3306)/sys_db
      - ETCD_ADDRESS=etcd:2379
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=youShouldChangeThis
    depends_on:
      - mysqld
      - redis
      - etcd
    ports:
      - "8002:8002"

  # Servicios de infraestructura
  web:
    image: ${DOCKER_REGISTRY-}go-saas-kit-frontend:${DOCKER_TAG:-dev}
    restart: unless-stopped

  api_docs:
    image: ${DOCKER_REGISTRY-}go-saas-kit-swagger:${DOCKER_TAG:-dev}
    environment:
      - BASE_URL="/swagger"
    restart: unless-stopped

  apisix:
    image: ${DOCKER_REGISTRY-}go-saas-kit-apisix:${DOCKER_TAG:-dev}
    ports:
      - "80:9080"   # Http
      - "9091:9091" # Prometheus
      - "443:443"   # Https
      - "9280:9280" # Admin Api
    restart: unless-stopped
    depends_on:
      - etcd
    extra_hosts:
      - "host.docker.internal:host-gateway"

  apisix-dashboard:
    image: apache/apisix-dashboard:3.0.1-alpine
    restart: always
    volumes:
      - ./quickstart/configs/apisix/dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
      - "9000:9000"

  hydra:
    image: oryd/hydra:v2.2.0
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - ./quickstart/configs/hydra:/etc/config/hydra
    environment:
      - DSN=mysql://root:youShouldChangeThis@tcp(mysqld:3306)/kit?max_conns=20&max_idle_conns=4
    restart: unless-stopped
    depends_on:
      - hydra-migrate

  hydra-migrate:
    image: oryd/hydra:v2.2.0
    environment:
      - DSN=mysql://root:youShouldChangeThis@tcp(mysqld:3306)/kit?max_conns=20&max_idle_conns=4
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - ./quickstart/configs/hydra:/etc/config/hydra
    restart: on-failure
    depends_on:
      - mysqld

  mysqld:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=youShouldChangeThis
      - MYSQL_ROOT_HOST=%
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3406:3306"

  redis:
    image: redis:6.0
    restart: always
    command: redis-server --requirepass youShouldChangeThis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - "7379:6379"

  etcd:
    image: bitnami/etcd:3.5.0
    restart: always
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - "3379:2379"
    volumes:
      - etcd_data:/bitnami/etcd

  dtm:
    image: goxiaoy/dtm:1.17.9
    restart: unless-stopped
    command: ["-c", "/data/conf.yml"]
    volumes:
      - ./quickstart/configs/dtm/conf.yml:/data/conf.yml
    ports:
      - "36790:36790"
      - "36789:36789"
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  mysql_data:
  etcd_data: