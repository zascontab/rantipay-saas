// Code generated by protoc-gen-go-grpc-proxy. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc-proxy v1.2.0
// - protoc             (unknown)
// source: order/api/order/v1/order.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var _ OrderServiceServer = (*orderServiceClientProxy)(nil)

var _ MyOrderServiceServer = (*myOrderServiceClientProxy)(nil)

// orderServiceClientProxy is the proxy to turn OrderService client to server interface.
type orderServiceClientProxy struct {
	cc OrderServiceClient
}

func NewOrderServiceClientProxy(cc OrderServiceClient) OrderServiceServer {
	return &orderServiceClientProxy{cc}
}

func (c *orderServiceClientProxy) ListOrder(ctx context.Context, in *ListOrderRequest) (*ListOrderReply, error) {
	return c.cc.ListOrder(ctx, in)
}
func (c *orderServiceClientProxy) GetOrder(ctx context.Context, in *GetOrderRequest) (*Order, error) {
	return c.cc.GetOrder(ctx, in)
}
func (c *orderServiceClientProxy) CreateOrder(ctx context.Context, in *CreateOrderRequest) (*Order, error) {
	return c.cc.CreateOrder(ctx, in)
}
func (c *orderServiceClientProxy) UpdateOrder(ctx context.Context, in *UpdateOrderRequest) (*Order, error) {
	return c.cc.UpdateOrder(ctx, in)
}
func (c *orderServiceClientProxy) DeleteOrder(ctx context.Context, in *DeleteOrderRequest) (*DeleteOrderReply, error) {
	return c.cc.DeleteOrder(ctx, in)
}

// myOrderServiceClientProxy is the proxy to turn MyOrderService client to server interface.
type myOrderServiceClientProxy struct {
	cc MyOrderServiceClient
}

func NewMyOrderServiceClientProxy(cc MyOrderServiceClient) MyOrderServiceServer {
	return &myOrderServiceClientProxy{cc}
}

func (c *myOrderServiceClientProxy) ListMyOrder(ctx context.Context, in *ListOrderRequest) (*ListOrderReply, error) {
	return c.cc.ListMyOrder(ctx, in)
}
func (c *myOrderServiceClientProxy) GetMyOrder(ctx context.Context, in *GetOrderRequest) (*Order, error) {
	return c.cc.GetMyOrder(ctx, in)
}
func (c *myOrderServiceClientProxy) RefundMyOrder(ctx context.Context, in *RefundMyOrderRequest) (*Order, error) {
	return c.cc.RefundMyOrder(ctx, in)
}
