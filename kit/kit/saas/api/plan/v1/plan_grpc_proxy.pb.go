// Code generated by protoc-gen-go-grpc-proxy. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc-proxy v1.2.0
// - protoc             (unknown)
// source: saas/api/plan/v1/plan.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var _ PlanServiceServer = (*planServiceClientProxy)(nil)

// planServiceClientProxy is the proxy to turn PlanService client to server interface.
type planServiceClientProxy struct {
	cc PlanServiceClient
}

func NewPlanServiceClientProxy(cc PlanServiceClient) PlanServiceServer {
	return &planServiceClientProxy{cc}
}

func (c *planServiceClientProxy) ListPlan(ctx context.Context, in *ListPlanRequest) (*ListPlanReply, error) {
	return c.cc.ListPlan(ctx, in)
}
func (c *planServiceClientProxy) GetPlan(ctx context.Context, in *GetPlanRequest) (*Plan, error) {
	return c.cc.GetPlan(ctx, in)
}
func (c *planServiceClientProxy) CreatePlan(ctx context.Context, in *CreatePlanRequest) (*Plan, error) {
	return c.cc.CreatePlan(ctx, in)
}
func (c *planServiceClientProxy) UpdatePlan(ctx context.Context, in *UpdatePlanRequest) (*Plan, error) {
	return c.cc.UpdatePlan(ctx, in)
}
func (c *planServiceClientProxy) DeletePlan(ctx context.Context, in *DeletePlanRequest) (*DeletePlanReply, error) {
	return c.cc.DeletePlan(ctx, in)
}
func (c *planServiceClientProxy) GetAvailablePlans(ctx context.Context, in *GetAvailablePlansRequest) (*GetAvailablePlansReply, error) {
	return c.cc.GetAvailablePlans(ctx, in)
}
