// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: oidc/api/client/v1/client.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/go-kratos/kratos/v2/errors"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Deprecated: Marked as deprecated in oidc/api/client/v1/client.proto.
	Offset          int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	ClientName      string `protobuf:"bytes,3,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	Owner           string `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	AfterPageToken  string `protobuf:"bytes,10,opt,name=after_page_token,json=afterPageToken,proto3" json:"after_page_token,omitempty"`
	BeforePageToken string `protobuf:"bytes,11,opt,name=before_page_token,json=beforePageToken,proto3" json:"before_page_token,omitempty"`
}

func (x *ListClientRequest) Reset() {
	*x = ListClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_api_client_v1_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientRequest) ProtoMessage() {}

func (x *ListClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_api_client_v1_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientRequest.ProtoReflect.Descriptor instead.
func (*ListClientRequest) Descriptor() ([]byte, []int) {
	return file_oidc_api_client_v1_client_proto_rawDescGZIP(), []int{0}
}

func (x *ListClientRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Deprecated: Marked as deprecated in oidc/api/client/v1/client.proto.
func (x *ListClientRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListClientRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *ListClientRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ListClientRequest) GetAfterPageToken() string {
	if x != nil {
		return x.AfterPageToken
	}
	return ""
}

func (x *ListClientRequest) GetBeforePageToken() string {
	if x != nil {
		return x.BeforePageToken
	}
	return ""
}

type OAuth2ClientList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items               []*OAuth2Client `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalSize           int32           `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	NextAfterPageToken  *string         `protobuf:"bytes,4,opt,name=next_after_page_token,json=nextAfterPageToken,proto3,oneof" json:"next_after_page_token,omitempty"`
	NextBeforePageToken *string         `protobuf:"bytes,5,opt,name=next_before_page_token,json=nextBeforePageToken,proto3,oneof" json:"next_before_page_token,omitempty"`
}

func (x *OAuth2ClientList) Reset() {
	*x = OAuth2ClientList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_api_client_v1_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuth2ClientList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth2ClientList) ProtoMessage() {}

func (x *OAuth2ClientList) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_api_client_v1_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuth2ClientList.ProtoReflect.Descriptor instead.
func (*OAuth2ClientList) Descriptor() ([]byte, []int) {
	return file_oidc_api_client_v1_client_proto_rawDescGZIP(), []int{1}
}

func (x *OAuth2ClientList) GetItems() []*OAuth2Client {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OAuth2ClientList) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *OAuth2ClientList) GetNextAfterPageToken() string {
	if x != nil && x.NextAfterPageToken != nil {
		return *x.NextAfterPageToken
	}
	return ""
}

func (x *OAuth2ClientList) GetNextBeforePageToken() string {
	if x != nil && x.NextBeforePageToken != nil {
		return *x.NextBeforePageToken
	}
	return ""
}

type OAuth2Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowedCorsOrigins                []string               `protobuf:"bytes,1,rep,name=allowed_cors_origins,json=allowedCorsOrigins,proto3" json:"allowed_cors_origins,omitempty"`
	Audience                          []string               `protobuf:"bytes,2,rep,name=audience,proto3" json:"audience,omitempty"`
	BackchannelLogoutSessionRequired  *bool                  `protobuf:"varint,3,opt,name=backchannel_logout_session_required,json=backchannelLogoutSessionRequired,proto3,oneof" json:"backchannel_logout_session_required,omitempty"`
	BackchannelLogoutUri              *string                `protobuf:"bytes,4,opt,name=backchannel_logout_uri,json=backchannelLogoutUri,proto3,oneof" json:"backchannel_logout_uri,omitempty"`
	ClientId                          *string                `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3,oneof" json:"client_id,omitempty"`
	ClientName                        *string                `protobuf:"bytes,6,opt,name=client_name,json=clientName,proto3,oneof" json:"client_name,omitempty"`
	ClientSecret                      *string                `protobuf:"bytes,7,opt,name=client_secret,json=clientSecret,proto3,oneof" json:"client_secret,omitempty"`
	ClientSecretExpiresAt             *int64                 `protobuf:"varint,8,opt,name=client_secret_expires_at,json=clientSecretExpiresAt,proto3,oneof" json:"client_secret_expires_at,omitempty"`
	ClientUri                         *string                `protobuf:"bytes,9,opt,name=client_uri,json=clientUri,proto3,oneof" json:"client_uri,omitempty"`
	Contacts                          []string               `protobuf:"bytes,10,rep,name=contacts,proto3" json:"contacts,omitempty"`
	CreatedAt                         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FrontchannelLogoutSessionRequired *bool                  `protobuf:"varint,12,opt,name=frontchannel_logout_session_required,json=frontchannelLogoutSessionRequired,proto3,oneof" json:"frontchannel_logout_session_required,omitempty"`
	FrontchannelLogoutUri             *string                `protobuf:"bytes,13,opt,name=frontchannel_logout_uri,json=frontchannelLogoutUri,proto3,oneof" json:"frontchannel_logout_uri,omitempty"`
	GrantTypes                        []string               `protobuf:"bytes,14,rep,name=grant_types,json=grantTypes,proto3" json:"grant_types,omitempty"`
	Jwks                              *structpb.Struct       `protobuf:"bytes,15,opt,name=jwks,proto3,oneof" json:"jwks,omitempty"`
	JwksUri                           *string                `protobuf:"bytes,16,opt,name=jwks_uri,json=jwksUri,proto3,oneof" json:"jwks_uri,omitempty"`
	LogoUri                           *string                `protobuf:"bytes,17,opt,name=logo_uri,json=logoUri,proto3,oneof" json:"logo_uri,omitempty"`
	Metadata                          *structpb.Struct       `protobuf:"bytes,18,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	Owner                             *string                `protobuf:"bytes,19,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	PolicyUri                         *string                `protobuf:"bytes,20,opt,name=policy_uri,json=policyUri,proto3,oneof" json:"policy_uri,omitempty"`
	PostLogoutRedirectUris            []string               `protobuf:"bytes,21,rep,name=post_logout_redirect_uris,json=postLogoutRedirectUris,proto3" json:"post_logout_redirect_uris,omitempty"`
	RedirectUris                      []string               `protobuf:"bytes,23,rep,name=redirect_uris,json=redirectUris,proto3" json:"redirect_uris,omitempty"`
	RegistrationAccessToken           *string                `protobuf:"bytes,24,opt,name=registration_access_token,json=registrationAccessToken,proto3,oneof" json:"registration_access_token,omitempty"`
	RegistrationClientUri             *string                `protobuf:"bytes,25,opt,name=registration_client_uri,json=registrationClientUri,proto3,oneof" json:"registration_client_uri,omitempty"`
	RequestObjectSigningAlg           *string                `protobuf:"bytes,26,opt,name=request_object_signing_alg,json=requestObjectSigningAlg,proto3,oneof" json:"request_object_signing_alg,omitempty"`
	RequestUris                       []string               `protobuf:"bytes,27,rep,name=request_uris,json=requestUris,proto3" json:"request_uris,omitempty"`
	ResponseTypes                     []string               `protobuf:"bytes,28,rep,name=response_types,json=responseTypes,proto3" json:"response_types,omitempty"`
	Scope                             *string                `protobuf:"bytes,29,opt,name=scope,proto3,oneof" json:"scope,omitempty"`
	SectorIdentifierUri               *string                `protobuf:"bytes,30,opt,name=sector_identifier_uri,json=sectorIdentifierUri,proto3,oneof" json:"sector_identifier_uri,omitempty"`
	SubjectType                       *string                `protobuf:"bytes,31,opt,name=subject_type,json=subjectType,proto3,oneof" json:"subject_type,omitempty"`
	TokenEndpointAuthMethod           *string                `protobuf:"bytes,32,opt,name=token_endpoint_auth_method,json=tokenEndpointAuthMethod,proto3,oneof" json:"token_endpoint_auth_method,omitempty"`
	TokenEndpointAuthSigningAlg       *string                `protobuf:"bytes,33,opt,name=token_endpoint_auth_signing_alg,json=tokenEndpointAuthSigningAlg,proto3,oneof" json:"token_endpoint_auth_signing_alg,omitempty"`
	TosUri                            *string                `protobuf:"bytes,34,opt,name=tos_uri,json=tosUri,proto3,oneof" json:"tos_uri,omitempty"`
	UpdatedAt                         *timestamppb.Timestamp `protobuf:"bytes,35,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UserinfoSignedResponseAlg         *string                `protobuf:"bytes,36,opt,name=userinfo_signed_response_alg,json=userinfoSignedResponseAlg,proto3,oneof" json:"userinfo_signed_response_alg,omitempty"`
}

func (x *OAuth2Client) Reset() {
	*x = OAuth2Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_api_client_v1_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuth2Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth2Client) ProtoMessage() {}

func (x *OAuth2Client) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_api_client_v1_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuth2Client.ProtoReflect.Descriptor instead.
func (*OAuth2Client) Descriptor() ([]byte, []int) {
	return file_oidc_api_client_v1_client_proto_rawDescGZIP(), []int{2}
}

func (x *OAuth2Client) GetAllowedCorsOrigins() []string {
	if x != nil {
		return x.AllowedCorsOrigins
	}
	return nil
}

func (x *OAuth2Client) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *OAuth2Client) GetBackchannelLogoutSessionRequired() bool {
	if x != nil && x.BackchannelLogoutSessionRequired != nil {
		return *x.BackchannelLogoutSessionRequired
	}
	return false
}

func (x *OAuth2Client) GetBackchannelLogoutUri() string {
	if x != nil && x.BackchannelLogoutUri != nil {
		return *x.BackchannelLogoutUri
	}
	return ""
}

func (x *OAuth2Client) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *OAuth2Client) GetClientName() string {
	if x != nil && x.ClientName != nil {
		return *x.ClientName
	}
	return ""
}

func (x *OAuth2Client) GetClientSecret() string {
	if x != nil && x.ClientSecret != nil {
		return *x.ClientSecret
	}
	return ""
}

func (x *OAuth2Client) GetClientSecretExpiresAt() int64 {
	if x != nil && x.ClientSecretExpiresAt != nil {
		return *x.ClientSecretExpiresAt
	}
	return 0
}

func (x *OAuth2Client) GetClientUri() string {
	if x != nil && x.ClientUri != nil {
		return *x.ClientUri
	}
	return ""
}

func (x *OAuth2Client) GetContacts() []string {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *OAuth2Client) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OAuth2Client) GetFrontchannelLogoutSessionRequired() bool {
	if x != nil && x.FrontchannelLogoutSessionRequired != nil {
		return *x.FrontchannelLogoutSessionRequired
	}
	return false
}

func (x *OAuth2Client) GetFrontchannelLogoutUri() string {
	if x != nil && x.FrontchannelLogoutUri != nil {
		return *x.FrontchannelLogoutUri
	}
	return ""
}

func (x *OAuth2Client) GetGrantTypes() []string {
	if x != nil {
		return x.GrantTypes
	}
	return nil
}

func (x *OAuth2Client) GetJwks() *structpb.Struct {
	if x != nil {
		return x.Jwks
	}
	return nil
}

func (x *OAuth2Client) GetJwksUri() string {
	if x != nil && x.JwksUri != nil {
		return *x.JwksUri
	}
	return ""
}

func (x *OAuth2Client) GetLogoUri() string {
	if x != nil && x.LogoUri != nil {
		return *x.LogoUri
	}
	return ""
}

func (x *OAuth2Client) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *OAuth2Client) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *OAuth2Client) GetPolicyUri() string {
	if x != nil && x.PolicyUri != nil {
		return *x.PolicyUri
	}
	return ""
}

func (x *OAuth2Client) GetPostLogoutRedirectUris() []string {
	if x != nil {
		return x.PostLogoutRedirectUris
	}
	return nil
}

func (x *OAuth2Client) GetRedirectUris() []string {
	if x != nil {
		return x.RedirectUris
	}
	return nil
}

func (x *OAuth2Client) GetRegistrationAccessToken() string {
	if x != nil && x.RegistrationAccessToken != nil {
		return *x.RegistrationAccessToken
	}
	return ""
}

func (x *OAuth2Client) GetRegistrationClientUri() string {
	if x != nil && x.RegistrationClientUri != nil {
		return *x.RegistrationClientUri
	}
	return ""
}

func (x *OAuth2Client) GetRequestObjectSigningAlg() string {
	if x != nil && x.RequestObjectSigningAlg != nil {
		return *x.RequestObjectSigningAlg
	}
	return ""
}

func (x *OAuth2Client) GetRequestUris() []string {
	if x != nil {
		return x.RequestUris
	}
	return nil
}

func (x *OAuth2Client) GetResponseTypes() []string {
	if x != nil {
		return x.ResponseTypes
	}
	return nil
}

func (x *OAuth2Client) GetScope() string {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return ""
}

func (x *OAuth2Client) GetSectorIdentifierUri() string {
	if x != nil && x.SectorIdentifierUri != nil {
		return *x.SectorIdentifierUri
	}
	return ""
}

func (x *OAuth2Client) GetSubjectType() string {
	if x != nil && x.SubjectType != nil {
		return *x.SubjectType
	}
	return ""
}

func (x *OAuth2Client) GetTokenEndpointAuthMethod() string {
	if x != nil && x.TokenEndpointAuthMethod != nil {
		return *x.TokenEndpointAuthMethod
	}
	return ""
}

func (x *OAuth2Client) GetTokenEndpointAuthSigningAlg() string {
	if x != nil && x.TokenEndpointAuthSigningAlg != nil {
		return *x.TokenEndpointAuthSigningAlg
	}
	return ""
}

func (x *OAuth2Client) GetTosUri() string {
	if x != nil && x.TosUri != nil {
		return *x.TosUri
	}
	return ""
}

func (x *OAuth2Client) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OAuth2Client) GetUserinfoSignedResponseAlg() string {
	if x != nil && x.UserinfoSignedResponseAlg != nil {
		return *x.UserinfoSignedResponseAlg
	}
	return ""
}

type DeleteOAuth2ClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteOAuth2ClientRequest) Reset() {
	*x = DeleteOAuth2ClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_api_client_v1_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOAuth2ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOAuth2ClientRequest) ProtoMessage() {}

func (x *DeleteOAuth2ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_api_client_v1_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOAuth2ClientRequest.ProtoReflect.Descriptor instead.
func (*DeleteOAuth2ClientRequest) Descriptor() ([]byte, []int) {
	return file_oidc_api_client_v1_client_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteOAuth2ClientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetOAuth2ClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOAuth2ClientRequest) Reset() {
	*x = GetOAuth2ClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_api_client_v1_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOAuth2ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOAuth2ClientRequest) ProtoMessage() {}

func (x *GetOAuth2ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_api_client_v1_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOAuth2ClientRequest.ProtoReflect.Descriptor instead.
func (*GetOAuth2ClientRequest) Descriptor() ([]byte, []int) {
	return file_oidc_api_client_v1_client_proto_rawDescGZIP(), []int{4}
}

func (x *GetOAuth2ClientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PatchOAuth2ClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Client []*PatchOAuth2Client `protobuf:"bytes,2,rep,name=client,proto3" json:"client,omitempty"`
}

func (x *PatchOAuth2ClientRequest) Reset() {
	*x = PatchOAuth2ClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_api_client_v1_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOAuth2ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOAuth2ClientRequest) ProtoMessage() {}

func (x *PatchOAuth2ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_api_client_v1_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOAuth2ClientRequest.ProtoReflect.Descriptor instead.
func (*PatchOAuth2ClientRequest) Descriptor() ([]byte, []int) {
	return file_oidc_api_client_v1_client_proto_rawDescGZIP(), []int{5}
}

func (x *PatchOAuth2ClientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PatchOAuth2ClientRequest) GetClient() []*PatchOAuth2Client {
	if x != nil {
		return x.Client
	}
	return nil
}

type PatchOAuth2Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  *string          `protobuf:"bytes,1,opt,name=from,proto3,oneof" json:"from,omitempty"`
	Op    string           `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`
	Path  string           `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Value *structpb.Struct `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PatchOAuth2Client) Reset() {
	*x = PatchOAuth2Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_api_client_v1_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOAuth2Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOAuth2Client) ProtoMessage() {}

func (x *PatchOAuth2Client) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_api_client_v1_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOAuth2Client.ProtoReflect.Descriptor instead.
func (*PatchOAuth2Client) Descriptor() ([]byte, []int) {
	return file_oidc_api_client_v1_client_proto_rawDescGZIP(), []int{6}
}

func (x *PatchOAuth2Client) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

func (x *PatchOAuth2Client) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *PatchOAuth2Client) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PatchOAuth2Client) GetValue() *structpb.Struct {
	if x != nil {
		return x.Value
	}
	return nil
}

type UpdateOAuth2ClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Client *OAuth2Client `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
}

func (x *UpdateOAuth2ClientRequest) Reset() {
	*x = UpdateOAuth2ClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_api_client_v1_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOAuth2ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOAuth2ClientRequest) ProtoMessage() {}

func (x *UpdateOAuth2ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_api_client_v1_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOAuth2ClientRequest.ProtoReflect.Descriptor instead.
func (*UpdateOAuth2ClientRequest) Descriptor() ([]byte, []int) {
	return file_oidc_api_client_v1_client_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateOAuth2ClientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateOAuth2ClientRequest) GetClient() *OAuth2Client {
	if x != nil {
		return x.Client
	}
	return nil
}

var File_oidc_api_client_v1_client_proto protoreflect.FileDescriptor

var file_oidc_api_client_v1_client_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x01, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x66, 0x74, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x8d, 0x02, 0x0a, 0x10, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x36, 0x0a, 0x15, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x38, 0x0a, 0x16, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xf2, 0x11, 0x0a, 0x0c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72,
	0x73, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x73, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x52, 0x0a, 0x23, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x20,
	0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x14, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x3c, 0x0a, 0x18, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x05, 0x52, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x06, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x88,
	0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x54, 0x0a, 0x24, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x21, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x3b, 0x0a, 0x17, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x08, 0x52, 0x15, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x30, 0x0a,
	0x04, 0x6a, 0x77, 0x6b, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x48, 0x09, 0x52, 0x04, 0x6a, 0x77, 0x6b, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x08, 0x6a, 0x77, 0x6b, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0a, 0x52, 0x07, 0x6a, 0x77, 0x6b, 0x73, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0b, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12,
	0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x0c, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x19, 0x70, 0x6f, 0x73, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x70, 0x6f, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55,
	0x72, 0x69, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f,
	0x75, 0x72, 0x69, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x3f, 0x0a, 0x19, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x17, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x17, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x15, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x1a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x6c, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x17, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x41, 0x6c, 0x67, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x69, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x1c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x12, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a,
	0x15, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x13,
	0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x40,
	0x0a, 0x1a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x15, 0x52, 0x17, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x49, 0x0a, 0x1f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x61, 0x6c, 0x67, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x48, 0x16, 0x52, 0x1b, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x74,
	0x6f, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x06,
	0x74, 0x6f, 0x73, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x44, 0x0a, 0x1c, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x61, 0x6c, 0x67, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x19, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x41, 0x6c, 0x67, 0x88, 0x01, 0x01, 0x42, 0x26, 0x0a, 0x24, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x1b, 0x0a,
	0x19, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x42, 0x27, 0x0a, 0x25, 0x5f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6a, 0x77, 0x6b, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6a, 0x77, 0x6b, 0x73,
	0x5f, 0x75, 0x72, 0x69, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72,
	0x69, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x75, 0x72, 0x69, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72,
	0x69, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x5f, 0x75, 0x72, 0x69, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x42, 0x22, 0x0a, 0x20, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x6f, 0x73,
	0x5f, 0x75, 0x72, 0x69, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x61, 0x6c, 0x67, 0x22, 0x37, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x72, 0x0a, 0x18, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x41, 0x75,
	0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f,
	0x69, 0x64, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x11, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x17,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x22, 0x6e, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75,
	0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f,
	0x69, 0x64, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f,
	0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x32, 0x85, 0x06, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x6f, 0x69,
	0x64, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x5a, 0x19, 0x3a, 0x01, 0x2a, 0x22,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x2f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x77, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x6f, 0x69, 0x64,
	0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x6e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22,
	0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x76, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x2a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7e, 0x0a, 0x11, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e,
	0x6f, 0x69, 0x64, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68,
	0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a,
	0x01, 0x2a, 0x32, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x80, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x2a, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x69,
	0x64, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x3a, 0x01, 0x2a, 0x1a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x2f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x2e, 0x5a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x61, 0x61,
	0x73, 0x2f, 0x6b, 0x69, 0x74, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_oidc_api_client_v1_client_proto_rawDescOnce sync.Once
	file_oidc_api_client_v1_client_proto_rawDescData = file_oidc_api_client_v1_client_proto_rawDesc
)

func file_oidc_api_client_v1_client_proto_rawDescGZIP() []byte {
	file_oidc_api_client_v1_client_proto_rawDescOnce.Do(func() {
		file_oidc_api_client_v1_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_oidc_api_client_v1_client_proto_rawDescData)
	})
	return file_oidc_api_client_v1_client_proto_rawDescData
}

var file_oidc_api_client_v1_client_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_oidc_api_client_v1_client_proto_goTypes = []interface{}{
	(*ListClientRequest)(nil),         // 0: oidc.api.client.ListClientRequest
	(*OAuth2ClientList)(nil),          // 1: oidc.api.client.OAuth2ClientList
	(*OAuth2Client)(nil),              // 2: oidc.api.client.OAuth2Client
	(*DeleteOAuth2ClientRequest)(nil), // 3: oidc.api.client.DeleteOAuth2ClientRequest
	(*GetOAuth2ClientRequest)(nil),    // 4: oidc.api.client.GetOAuth2ClientRequest
	(*PatchOAuth2ClientRequest)(nil),  // 5: oidc.api.client.PatchOAuth2ClientRequest
	(*PatchOAuth2Client)(nil),         // 6: oidc.api.client.PatchOAuth2Client
	(*UpdateOAuth2ClientRequest)(nil), // 7: oidc.api.client.UpdateOAuth2ClientRequest
	(*timestamppb.Timestamp)(nil),     // 8: google.protobuf.Timestamp
	(*structpb.Struct)(nil),           // 9: google.protobuf.Struct
	(*emptypb.Empty)(nil),             // 10: google.protobuf.Empty
}
var file_oidc_api_client_v1_client_proto_depIdxs = []int32{
	2,  // 0: oidc.api.client.OAuth2ClientList.items:type_name -> oidc.api.client.OAuth2Client
	8,  // 1: oidc.api.client.OAuth2Client.created_at:type_name -> google.protobuf.Timestamp
	9,  // 2: oidc.api.client.OAuth2Client.jwks:type_name -> google.protobuf.Struct
	9,  // 3: oidc.api.client.OAuth2Client.metadata:type_name -> google.protobuf.Struct
	8,  // 4: oidc.api.client.OAuth2Client.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 5: oidc.api.client.PatchOAuth2ClientRequest.client:type_name -> oidc.api.client.PatchOAuth2Client
	9,  // 6: oidc.api.client.PatchOAuth2Client.value:type_name -> google.protobuf.Struct
	2,  // 7: oidc.api.client.UpdateOAuth2ClientRequest.client:type_name -> oidc.api.client.OAuth2Client
	0,  // 8: oidc.api.client.ClientService.ListOAuth2Clients:input_type -> oidc.api.client.ListClientRequest
	4,  // 9: oidc.api.client.ClientService.GetOAuth2Client:input_type -> oidc.api.client.GetOAuth2ClientRequest
	2,  // 10: oidc.api.client.ClientService.CreateOAuth2Client:input_type -> oidc.api.client.OAuth2Client
	3,  // 11: oidc.api.client.ClientService.DeleteOAuth2Client:input_type -> oidc.api.client.DeleteOAuth2ClientRequest
	5,  // 12: oidc.api.client.ClientService.PatchOAuth2Client:input_type -> oidc.api.client.PatchOAuth2ClientRequest
	7,  // 13: oidc.api.client.ClientService.UpdateOAuth2Client:input_type -> oidc.api.client.UpdateOAuth2ClientRequest
	1,  // 14: oidc.api.client.ClientService.ListOAuth2Clients:output_type -> oidc.api.client.OAuth2ClientList
	2,  // 15: oidc.api.client.ClientService.GetOAuth2Client:output_type -> oidc.api.client.OAuth2Client
	2,  // 16: oidc.api.client.ClientService.CreateOAuth2Client:output_type -> oidc.api.client.OAuth2Client
	10, // 17: oidc.api.client.ClientService.DeleteOAuth2Client:output_type -> google.protobuf.Empty
	2,  // 18: oidc.api.client.ClientService.PatchOAuth2Client:output_type -> oidc.api.client.OAuth2Client
	2,  // 19: oidc.api.client.ClientService.UpdateOAuth2Client:output_type -> oidc.api.client.OAuth2Client
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_oidc_api_client_v1_client_proto_init() }
func file_oidc_api_client_v1_client_proto_init() {
	if File_oidc_api_client_v1_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oidc_api_client_v1_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_api_client_v1_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuth2ClientList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_api_client_v1_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuth2Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_api_client_v1_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOAuth2ClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_api_client_v1_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOAuth2ClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_api_client_v1_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOAuth2ClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_api_client_v1_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOAuth2Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_api_client_v1_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOAuth2ClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_oidc_api_client_v1_client_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_oidc_api_client_v1_client_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_oidc_api_client_v1_client_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oidc_api_client_v1_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oidc_api_client_v1_client_proto_goTypes,
		DependencyIndexes: file_oidc_api_client_v1_client_proto_depIdxs,
		MessageInfos:      file_oidc_api_client_v1_client_proto_msgTypes,
	}.Build()
	File_oidc_api_client_v1_client_proto = out.File
	file_oidc_api_client_v1_client_proto_rawDesc = nil
	file_oidc_api_client_v1_client_proto_goTypes = nil
	file_oidc_api_client_v1_client_proto_depIdxs = nil
}
