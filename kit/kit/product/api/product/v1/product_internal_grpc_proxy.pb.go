// Code generated by protoc-gen-go-grpc-proxy. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc-proxy v1.2.0
// - protoc             (unknown)
// source: product/api/product/v1/product_internal.proto

package v1

import (
	context "context"
	v1 "github.com/go-saas/kit/product/api/price/v1"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var _ ProductInternalServiceServer = (*productInternalServiceClientProxy)(nil)

// productInternalServiceClientProxy is the proxy to turn ProductInternalService client to server interface.
type productInternalServiceClientProxy struct {
	cc ProductInternalServiceClient
}

func NewProductInternalServiceClientProxy(cc ProductInternalServiceClient) ProductInternalServiceServer {
	return &productInternalServiceClientProxy{cc}
}

func (c *productInternalServiceClientProxy) ListInternalProduct(ctx context.Context, in *ListProductRequest) (*ListProductReply, error) {
	return c.cc.ListInternalProduct(ctx, in)
}
func (c *productInternalServiceClientProxy) CreateInternalProduct(ctx context.Context, in *CreateInternalProductRequest) (*Product, error) {
	return c.cc.CreateInternalProduct(ctx, in)
}
func (c *productInternalServiceClientProxy) GetInternalProduct(ctx context.Context, in *GetInternalProductRequest) (*Product, error) {
	return c.cc.GetInternalProduct(ctx, in)
}
func (c *productInternalServiceClientProxy) UpdateInternalProduct(ctx context.Context, in *UpdateInternalProductRequest) (*Product, error) {
	return c.cc.UpdateInternalProduct(ctx, in)
}
func (c *productInternalServiceClientProxy) DeleteInternalProduct(ctx context.Context, in *DeleteInternalProductRequest) (*DeleteInternalProductReply, error) {
	return c.cc.DeleteInternalProduct(ctx, in)
}
func (c *productInternalServiceClientProxy) GetInternalPrice(ctx context.Context, in *GetInternalPriceRequest) (*v1.Price, error) {
	return c.cc.GetInternalPrice(ctx, in)
}
