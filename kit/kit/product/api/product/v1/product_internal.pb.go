// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: product/api/product/v1/product_internal.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/go-saas/kit/pkg/query"
	_ "github.com/go-saas/kit/product/api/category/v1"
	v1 "github.com/go-saas/kit/product/api/price/v1"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateInternalProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string                 `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	ShortDesc       string                 `protobuf:"bytes,11,opt,name=short_desc,json=shortDesc,proto3" json:"short_desc,omitempty"`
	Desc            string                 `protobuf:"bytes,12,opt,name=desc,proto3" json:"desc,omitempty"`
	MainPic         *ProductMedia          `protobuf:"bytes,13,opt,name=main_pic,json=mainPic,proto3" json:"main_pic,omitempty"`
	Medias          []*ProductMedia        `protobuf:"bytes,14,rep,name=medias,proto3" json:"medias,omitempty"`
	Badges          []*Badge               `protobuf:"bytes,15,rep,name=badges,proto3" json:"badges,omitempty"`
	VisibleFrom     *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=visible_from,json=visibleFrom,proto3" json:"visible_from,omitempty"`
	VisibleTo       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=visible_to,json=visibleTo,proto3" json:"visible_to,omitempty"`
	IsNew           bool                   `protobuf:"varint,18,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	MainCategoryKey *string                `protobuf:"bytes,40,opt,name=main_category_key,json=mainCategoryKey,proto3,oneof" json:"main_category_key,omitempty"`
	CategoryKeys    []string               `protobuf:"bytes,41,rep,name=category_keys,json=categoryKeys,proto3" json:"category_keys,omitempty"`
	Barcode         string                 `protobuf:"bytes,19,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Model           string                 `protobuf:"bytes,20,opt,name=model,proto3" json:"model,omitempty"`
	BrandId         *string                `protobuf:"bytes,21,opt,name=brand_id,json=brandId,proto3,oneof" json:"brand_id,omitempty"`
	IsSaleable      bool                   `protobuf:"varint,22,opt,name=is_saleable,json=isSaleable,proto3" json:"is_saleable,omitempty"`
	SaleableFrom    *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=saleable_from,json=saleableFrom,proto3" json:"saleable_from,omitempty"`
	SaleableTo      *timestamppb.Timestamp `protobuf:"bytes,24,opt,name=saleable_to,json=saleableTo,proto3" json:"saleable_to,omitempty"`
	Keywords        []*Keyword             `protobuf:"bytes,25,rep,name=keywords,proto3" json:"keywords,omitempty"`
	Prices          []*v1.PriceParams      `protobuf:"bytes,26,rep,name=prices,proto3" json:"prices,omitempty"`
	IsGiveaway      bool                   `protobuf:"varint,27,opt,name=is_giveaway,json=isGiveaway,proto3" json:"is_giveaway,omitempty"`
	Attributes      []*ProductAttribute    `protobuf:"bytes,43,rep,name=attributes,proto3" json:"attributes,omitempty"`
	MultiSku        bool                   `protobuf:"varint,50,opt,name=multi_sku,json=multiSku,proto3" json:"multi_sku,omitempty"`
	CampaignRules   []*CampaignRule        `protobuf:"bytes,60,rep,name=campaign_rules,json=campaignRules,proto3" json:"campaign_rules,omitempty"`
	NeedShipping    bool                   `protobuf:"varint,61,opt,name=need_shipping,json=needShipping,proto3" json:"need_shipping,omitempty"`
	Stocks          []*Stock               `protobuf:"bytes,62,rep,name=stocks,proto3" json:"stocks,omitempty"`
	Content         *structpb.Struct       `protobuf:"bytes,63,opt,name=content,proto3" json:"content,omitempty"`
	//internal extra fields
	ManageInfo *ProductManageInfo `protobuf:"bytes,100,opt,name=manage_info,json=manageInfo,proto3" json:"manage_info,omitempty"`
	Active     bool               `protobuf:"varint,101,opt,name=active,proto3" json:"active,omitempty"`
	Internal   bool               `protobuf:"varint,102,opt,name=internal,proto3" json:"internal,omitempty"`
}

func (x *CreateInternalProductRequest) Reset() {
	*x = CreateInternalProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_api_product_v1_product_internal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInternalProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInternalProductRequest) ProtoMessage() {}

func (x *CreateInternalProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_api_product_v1_product_internal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInternalProductRequest.ProtoReflect.Descriptor instead.
func (*CreateInternalProductRequest) Descriptor() ([]byte, []int) {
	return file_product_api_product_v1_product_internal_proto_rawDescGZIP(), []int{0}
}

func (x *CreateInternalProductRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateInternalProductRequest) GetShortDesc() string {
	if x != nil {
		return x.ShortDesc
	}
	return ""
}

func (x *CreateInternalProductRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateInternalProductRequest) GetMainPic() *ProductMedia {
	if x != nil {
		return x.MainPic
	}
	return nil
}

func (x *CreateInternalProductRequest) GetMedias() []*ProductMedia {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *CreateInternalProductRequest) GetBadges() []*Badge {
	if x != nil {
		return x.Badges
	}
	return nil
}

func (x *CreateInternalProductRequest) GetVisibleFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.VisibleFrom
	}
	return nil
}

func (x *CreateInternalProductRequest) GetVisibleTo() *timestamppb.Timestamp {
	if x != nil {
		return x.VisibleTo
	}
	return nil
}

func (x *CreateInternalProductRequest) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *CreateInternalProductRequest) GetMainCategoryKey() string {
	if x != nil && x.MainCategoryKey != nil {
		return *x.MainCategoryKey
	}
	return ""
}

func (x *CreateInternalProductRequest) GetCategoryKeys() []string {
	if x != nil {
		return x.CategoryKeys
	}
	return nil
}

func (x *CreateInternalProductRequest) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *CreateInternalProductRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CreateInternalProductRequest) GetBrandId() string {
	if x != nil && x.BrandId != nil {
		return *x.BrandId
	}
	return ""
}

func (x *CreateInternalProductRequest) GetIsSaleable() bool {
	if x != nil {
		return x.IsSaleable
	}
	return false
}

func (x *CreateInternalProductRequest) GetSaleableFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SaleableFrom
	}
	return nil
}

func (x *CreateInternalProductRequest) GetSaleableTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SaleableTo
	}
	return nil
}

func (x *CreateInternalProductRequest) GetKeywords() []*Keyword {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *CreateInternalProductRequest) GetPrices() []*v1.PriceParams {
	if x != nil {
		return x.Prices
	}
	return nil
}

func (x *CreateInternalProductRequest) GetIsGiveaway() bool {
	if x != nil {
		return x.IsGiveaway
	}
	return false
}

func (x *CreateInternalProductRequest) GetAttributes() []*ProductAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CreateInternalProductRequest) GetMultiSku() bool {
	if x != nil {
		return x.MultiSku
	}
	return false
}

func (x *CreateInternalProductRequest) GetCampaignRules() []*CampaignRule {
	if x != nil {
		return x.CampaignRules
	}
	return nil
}

func (x *CreateInternalProductRequest) GetNeedShipping() bool {
	if x != nil {
		return x.NeedShipping
	}
	return false
}

func (x *CreateInternalProductRequest) GetStocks() []*Stock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

func (x *CreateInternalProductRequest) GetContent() *structpb.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CreateInternalProductRequest) GetManageInfo() *ProductManageInfo {
	if x != nil {
		return x.ManageInfo
	}
	return nil
}

func (x *CreateInternalProductRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *CreateInternalProductRequest) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

type UpdateInternalProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product    *UpdateProduct         `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateInternalProductRequest) Reset() {
	*x = UpdateInternalProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_api_product_v1_product_internal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInternalProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInternalProductRequest) ProtoMessage() {}

func (x *UpdateInternalProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_api_product_v1_product_internal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInternalProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateInternalProductRequest) Descriptor() ([]byte, []int) {
	return file_product_api_product_v1_product_internal_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateInternalProductRequest) GetProduct() *UpdateProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *UpdateInternalProductRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type GetInternalProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetInternalProductRequest) Reset() {
	*x = GetInternalProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_api_product_v1_product_internal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInternalProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInternalProductRequest) ProtoMessage() {}

func (x *GetInternalProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_api_product_v1_product_internal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInternalProductRequest.ProtoReflect.Descriptor instead.
func (*GetInternalProductRequest) Descriptor() ([]byte, []int) {
	return file_product_api_product_v1_product_internal_proto_rawDescGZIP(), []int{2}
}

func (x *GetInternalProductRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteInternalProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteInternalProductRequest) Reset() {
	*x = DeleteInternalProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_api_product_v1_product_internal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInternalProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInternalProductRequest) ProtoMessage() {}

func (x *DeleteInternalProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_api_product_v1_product_internal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInternalProductRequest.ProtoReflect.Descriptor instead.
func (*DeleteInternalProductRequest) Descriptor() ([]byte, []int) {
	return file_product_api_product_v1_product_internal_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteInternalProductRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteInternalProductReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteInternalProductReply) Reset() {
	*x = DeleteInternalProductReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_api_product_v1_product_internal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInternalProductReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInternalProductReply) ProtoMessage() {}

func (x *DeleteInternalProductReply) ProtoReflect() protoreflect.Message {
	mi := &file_product_api_product_v1_product_internal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInternalProductReply.ProtoReflect.Descriptor instead.
func (*DeleteInternalProductReply) Descriptor() ([]byte, []int) {
	return file_product_api_product_v1_product_internal_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteInternalProductReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetInternalPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetInternalPriceRequest) Reset() {
	*x = GetInternalPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_api_product_v1_product_internal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInternalPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInternalPriceRequest) ProtoMessage() {}

func (x *GetInternalPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_product_api_product_v1_product_internal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInternalPriceRequest.ProtoReflect.Descriptor instead.
func (*GetInternalPriceRequest) Descriptor() ([]byte, []int) {
	return file_product_api_product_v1_product_internal_proto_rawDescGZIP(), []int{5}
}

func (x *GetInternalPriceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_product_api_product_v1_product_internal_proto protoreflect.FileDescriptor

var file_product_api_product_v1_product_internal_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x0a, 0x0a,
	0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6e,
	0x50, 0x69, 0x63, 0x12, 0x3c, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x73, 0x12, 0x35, 0x0a, 0x06, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x52, 0x06, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x39, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x54, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x2f, 0x0a, 0x11, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x29, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x1e, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x12, 0x3b,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x67, 0x69, 0x76,
	0x65, 0x61, 0x77, 0x61, 0x79, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x47,
	0x69, 0x76, 0x65, 0x61, 0x77, 0x61, 0x79, 0x12, 0x48, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x2b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x73, 0x6b, 0x75, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x6b, 0x75, 0x12, 0x4b,
	0x0a, 0x0e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x3c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0d, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6e,
	0x65, 0x65, 0x64, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x3d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x3e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x66, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x22, 0xa9, 0x01,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x37, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x2e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x35, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x32, 0xc1, 0x05, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x6d, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x70, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12,
	0x70, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22,
	0x00, 0x12, 0x83, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x34, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x61, 0x61,
	0x73, 0x2f, 0x6b, 0x69, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_product_api_product_v1_product_internal_proto_rawDescOnce sync.Once
	file_product_api_product_v1_product_internal_proto_rawDescData = file_product_api_product_v1_product_internal_proto_rawDesc
)

func file_product_api_product_v1_product_internal_proto_rawDescGZIP() []byte {
	file_product_api_product_v1_product_internal_proto_rawDescOnce.Do(func() {
		file_product_api_product_v1_product_internal_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_api_product_v1_product_internal_proto_rawDescData)
	})
	return file_product_api_product_v1_product_internal_proto_rawDescData
}

var file_product_api_product_v1_product_internal_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_product_api_product_v1_product_internal_proto_goTypes = []interface{}{
	(*CreateInternalProductRequest)(nil), // 0: product.api.product.v1.CreateInternalProductRequest
	(*UpdateInternalProductRequest)(nil), // 1: product.api.product.v1.UpdateInternalProductRequest
	(*GetInternalProductRequest)(nil),    // 2: product.api.product.v1.GetInternalProductRequest
	(*DeleteInternalProductRequest)(nil), // 3: product.api.product.v1.DeleteInternalProductRequest
	(*DeleteInternalProductReply)(nil),   // 4: product.api.product.v1.DeleteInternalProductReply
	(*GetInternalPriceRequest)(nil),      // 5: product.api.product.v1.GetInternalPriceRequest
	(*ProductMedia)(nil),                 // 6: product.api.product.v1.ProductMedia
	(*Badge)(nil),                        // 7: product.api.product.v1.Badge
	(*timestamppb.Timestamp)(nil),        // 8: google.protobuf.Timestamp
	(*Keyword)(nil),                      // 9: product.api.product.v1.Keyword
	(*v1.PriceParams)(nil),               // 10: product.api.price.v1.PriceParams
	(*ProductAttribute)(nil),             // 11: product.api.product.v1.ProductAttribute
	(*CampaignRule)(nil),                 // 12: product.api.product.v1.CampaignRule
	(*Stock)(nil),                        // 13: product.api.product.v1.Stock
	(*structpb.Struct)(nil),              // 14: google.protobuf.Struct
	(*ProductManageInfo)(nil),            // 15: product.api.product.v1.ProductManageInfo
	(*UpdateProduct)(nil),                // 16: product.api.product.v1.UpdateProduct
	(*fieldmaskpb.FieldMask)(nil),        // 17: google.protobuf.FieldMask
	(*ListProductRequest)(nil),           // 18: product.api.product.v1.ListProductRequest
	(*ListProductReply)(nil),             // 19: product.api.product.v1.ListProductReply
	(*Product)(nil),                      // 20: product.api.product.v1.Product
	(*v1.Price)(nil),                     // 21: product.api.price.v1.Price
}
var file_product_api_product_v1_product_internal_proto_depIdxs = []int32{
	6,  // 0: product.api.product.v1.CreateInternalProductRequest.main_pic:type_name -> product.api.product.v1.ProductMedia
	6,  // 1: product.api.product.v1.CreateInternalProductRequest.medias:type_name -> product.api.product.v1.ProductMedia
	7,  // 2: product.api.product.v1.CreateInternalProductRequest.badges:type_name -> product.api.product.v1.Badge
	8,  // 3: product.api.product.v1.CreateInternalProductRequest.visible_from:type_name -> google.protobuf.Timestamp
	8,  // 4: product.api.product.v1.CreateInternalProductRequest.visible_to:type_name -> google.protobuf.Timestamp
	8,  // 5: product.api.product.v1.CreateInternalProductRequest.saleable_from:type_name -> google.protobuf.Timestamp
	8,  // 6: product.api.product.v1.CreateInternalProductRequest.saleable_to:type_name -> google.protobuf.Timestamp
	9,  // 7: product.api.product.v1.CreateInternalProductRequest.keywords:type_name -> product.api.product.v1.Keyword
	10, // 8: product.api.product.v1.CreateInternalProductRequest.prices:type_name -> product.api.price.v1.PriceParams
	11, // 9: product.api.product.v1.CreateInternalProductRequest.attributes:type_name -> product.api.product.v1.ProductAttribute
	12, // 10: product.api.product.v1.CreateInternalProductRequest.campaign_rules:type_name -> product.api.product.v1.CampaignRule
	13, // 11: product.api.product.v1.CreateInternalProductRequest.stocks:type_name -> product.api.product.v1.Stock
	14, // 12: product.api.product.v1.CreateInternalProductRequest.content:type_name -> google.protobuf.Struct
	15, // 13: product.api.product.v1.CreateInternalProductRequest.manage_info:type_name -> product.api.product.v1.ProductManageInfo
	16, // 14: product.api.product.v1.UpdateInternalProductRequest.product:type_name -> product.api.product.v1.UpdateProduct
	17, // 15: product.api.product.v1.UpdateInternalProductRequest.update_mask:type_name -> google.protobuf.FieldMask
	18, // 16: product.api.product.v1.ProductInternalService.ListInternalProduct:input_type -> product.api.product.v1.ListProductRequest
	0,  // 17: product.api.product.v1.ProductInternalService.CreateInternalProduct:input_type -> product.api.product.v1.CreateInternalProductRequest
	2,  // 18: product.api.product.v1.ProductInternalService.GetInternalProduct:input_type -> product.api.product.v1.GetInternalProductRequest
	1,  // 19: product.api.product.v1.ProductInternalService.UpdateInternalProduct:input_type -> product.api.product.v1.UpdateInternalProductRequest
	3,  // 20: product.api.product.v1.ProductInternalService.DeleteInternalProduct:input_type -> product.api.product.v1.DeleteInternalProductRequest
	5,  // 21: product.api.product.v1.ProductInternalService.GetInternalPrice:input_type -> product.api.product.v1.GetInternalPriceRequest
	19, // 22: product.api.product.v1.ProductInternalService.ListInternalProduct:output_type -> product.api.product.v1.ListProductReply
	20, // 23: product.api.product.v1.ProductInternalService.CreateInternalProduct:output_type -> product.api.product.v1.Product
	20, // 24: product.api.product.v1.ProductInternalService.GetInternalProduct:output_type -> product.api.product.v1.Product
	20, // 25: product.api.product.v1.ProductInternalService.UpdateInternalProduct:output_type -> product.api.product.v1.Product
	4,  // 26: product.api.product.v1.ProductInternalService.DeleteInternalProduct:output_type -> product.api.product.v1.DeleteInternalProductReply
	21, // 27: product.api.product.v1.ProductInternalService.GetInternalPrice:output_type -> product.api.price.v1.Price
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_product_api_product_v1_product_internal_proto_init() }
func file_product_api_product_v1_product_internal_proto_init() {
	if File_product_api_product_v1_product_internal_proto != nil {
		return
	}
	file_product_api_product_v1_common_proto_init()
	file_product_api_product_v1_product_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_product_api_product_v1_product_internal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInternalProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_api_product_v1_product_internal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInternalProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_api_product_v1_product_internal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInternalProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_api_product_v1_product_internal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInternalProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_api_product_v1_product_internal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInternalProductReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_api_product_v1_product_internal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInternalPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_product_api_product_v1_product_internal_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_api_product_v1_product_internal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_api_product_v1_product_internal_proto_goTypes,
		DependencyIndexes: file_product_api_product_v1_product_internal_proto_depIdxs,
		MessageInfos:      file_product_api_product_v1_product_internal_proto_msgTypes,
	}.Build()
	File_product_api_product_v1_product_internal_proto = out.File
	file_product_api_product_v1_product_internal_proto_rawDesc = nil
	file_product_api_product_v1_product_internal_proto_goTypes = nil
	file_product_api_product_v1_product_internal_proto_depIdxs = nil
}
