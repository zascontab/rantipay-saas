// Code generated by protoc-gen-go-grpc-proxy. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc-proxy v1.2.0
// - protoc             (unknown)
// source: saas/api/tenant/v1/tenant.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var _ TenantServiceServer = (*tenantServiceClientProxy)(nil)

var _ TenantInternalServiceServer = (*tenantInternalServiceClientProxy)(nil)

// tenantServiceClientProxy is the proxy to turn TenantService client to server interface.
type tenantServiceClientProxy struct {
	cc TenantServiceClient
}

func NewTenantServiceClientProxy(cc TenantServiceClient) TenantServiceServer {
	return &tenantServiceClientProxy{cc}
}

func (c *tenantServiceClientProxy) CreateTenant(ctx context.Context, in *CreateTenantRequest) (*Tenant, error) {
	return c.cc.CreateTenant(ctx, in)
}
func (c *tenantServiceClientProxy) UpdateTenant(ctx context.Context, in *UpdateTenantRequest) (*Tenant, error) {
	return c.cc.UpdateTenant(ctx, in)
}
func (c *tenantServiceClientProxy) DeleteTenant(ctx context.Context, in *DeleteTenantRequest) (*DeleteTenantReply, error) {
	return c.cc.DeleteTenant(ctx, in)
}
func (c *tenantServiceClientProxy) GetTenant(ctx context.Context, in *GetTenantRequest) (*Tenant, error) {
	return c.cc.GetTenant(ctx, in)
}
func (c *tenantServiceClientProxy) GetTenantPublic(ctx context.Context, in *GetTenantPublicRequest) (*TenantInfo, error) {
	return c.cc.GetTenantPublic(ctx, in)
}
func (c *tenantServiceClientProxy) ListTenant(ctx context.Context, in *ListTenantRequest) (*ListTenantReply, error) {
	return c.cc.ListTenant(ctx, in)
}
func (c *tenantServiceClientProxy) GetCurrentTenant(ctx context.Context, in *GetCurrentTenantRequest) (*GetCurrentTenantReply, error) {
	return c.cc.GetCurrentTenant(ctx, in)
}
func (c *tenantServiceClientProxy) ChangeTenant(ctx context.Context, in *ChangeTenantRequest) (*ChangeTenantReply, error) {
	return c.cc.ChangeTenant(ctx, in)
}
func (c *tenantServiceClientProxy) UserCreateTenant(ctx context.Context, in *UserCreateTenantRequest) (*UserCreateTenantReply, error) {
	return c.cc.UserCreateTenant(ctx, in)
}

// tenantInternalServiceClientProxy is the proxy to turn TenantInternalService client to server interface.
type tenantInternalServiceClientProxy struct {
	cc TenantInternalServiceClient
}

func NewTenantInternalServiceClientProxy(cc TenantInternalServiceClient) TenantInternalServiceServer {
	return &tenantInternalServiceClientProxy{cc}
}

func (c *tenantInternalServiceClientProxy) GetTenant(ctx context.Context, in *GetTenantRequest) (*Tenant, error) {
	return c.cc.GetTenant(ctx, in)
}
func (c *tenantInternalServiceClientProxy) ListTenant(ctx context.Context, in *ListTenantRequest) (*ListTenantReply, error) {
	return c.cc.ListTenant(ctx, in)
}
