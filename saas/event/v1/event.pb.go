// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: saas/event/v1/event.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TenantCreatedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Region        string                 `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	SeparateDb    bool                   `protobuf:"varint,6,opt,name=separate_db,json=separateDb,proto3" json:"separate_db,omitempty"`
	AdminEmail    string                 `protobuf:"bytes,7,opt,name=admin_email,json=adminEmail,proto3" json:"admin_email,omitempty"`
	AdminUsername string                 `protobuf:"bytes,8,opt,name=admin_username,json=adminUsername,proto3" json:"admin_username,omitempty"`
	AdminPassword string                 `protobuf:"bytes,9,opt,name=admin_password,json=adminPassword,proto3" json:"admin_password,omitempty"`
	AdminUserId   string                 `protobuf:"bytes,10,opt,name=admin_user_id,json=adminUserId,proto3" json:"admin_user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TenantCreatedEvent) Reset() {
	*x = TenantCreatedEvent{}
	mi := &file_saas_event_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantCreatedEvent) ProtoMessage() {}

func (x *TenantCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_saas_event_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantCreatedEvent.ProtoReflect.Descriptor instead.
func (*TenantCreatedEvent) Descriptor() ([]byte, []int) {
	return file_saas_event_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *TenantCreatedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TenantCreatedEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TenantCreatedEvent) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *TenantCreatedEvent) GetSeparateDb() bool {
	if x != nil {
		return x.SeparateDb
	}
	return false
}

func (x *TenantCreatedEvent) GetAdminEmail() string {
	if x != nil {
		return x.AdminEmail
	}
	return ""
}

func (x *TenantCreatedEvent) GetAdminUsername() string {
	if x != nil {
		return x.AdminUsername
	}
	return ""
}

func (x *TenantCreatedEvent) GetAdminPassword() string {
	if x != nil {
		return x.AdminPassword
	}
	return ""
}

func (x *TenantCreatedEvent) GetAdminUserId() string {
	if x != nil {
		return x.AdminUserId
	}
	return ""
}

type TenantReadyEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceName   string                 `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TenantReadyEvent) Reset() {
	*x = TenantReadyEvent{}
	mi := &file_saas_event_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantReadyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantReadyEvent) ProtoMessage() {}

func (x *TenantReadyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_saas_event_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantReadyEvent.ProtoReflect.Descriptor instead.
func (*TenantReadyEvent) Descriptor() ([]byte, []int) {
	return file_saas_event_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *TenantReadyEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TenantReadyEvent) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

var File_saas_event_v1_event_proto protoreflect.FileDescriptor

const file_saas_event_v1_event_proto_rawDesc = "" +
	"\n" +
	"\x19saas/event/v1/event.proto\x12\rsaas.event.v1\x1a(google/api/annotations/annotations.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17validate/validate.proto\x1a\x1fgoogle/api/field_behavior.proto\"\x84\x02\n" +
	"\x12TenantCreatedEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06region\x18\x04 \x01(\tR\x06region\x12\x1f\n" +
	"\vseparate_db\x18\x06 \x01(\bR\n" +
	"separateDb\x12\x1f\n" +
	"\vadmin_email\x18\a \x01(\tR\n" +
	"adminEmail\x12%\n" +
	"\x0eadmin_username\x18\b \x01(\tR\radminUsername\x12%\n" +
	"\x0eadmin_password\x18\t \x01(\tR\radminPassword\x12\"\n" +
	"\radmin_user_id\x18\n" +
	" \x01(\tR\vadminUserId\"E\n" +
	"\x10TenantReadyEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fservice_name\x18\x02 \x01(\tR\vserviceNameB)Z'github.com/go-saas/kit/saas/event/v1;v1b\x06proto3"

var (
	file_saas_event_v1_event_proto_rawDescOnce sync.Once
	file_saas_event_v1_event_proto_rawDescData []byte
)

func file_saas_event_v1_event_proto_rawDescGZIP() []byte {
	file_saas_event_v1_event_proto_rawDescOnce.Do(func() {
		file_saas_event_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_saas_event_v1_event_proto_rawDesc), len(file_saas_event_v1_event_proto_rawDesc)))
	})
	return file_saas_event_v1_event_proto_rawDescData
}

var file_saas_event_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_saas_event_v1_event_proto_goTypes = []any{
	(*TenantCreatedEvent)(nil), // 0: saas.event.v1.TenantCreatedEvent
	(*TenantReadyEvent)(nil),   // 1: saas.event.v1.TenantReadyEvent
}
var file_saas_event_v1_event_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_saas_event_v1_event_proto_init() }
func file_saas_event_v1_event_proto_init() {
	if File_saas_event_v1_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_saas_event_v1_event_proto_rawDesc), len(file_saas_event_v1_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_saas_event_v1_event_proto_goTypes,
		DependencyIndexes: file_saas_event_v1_event_proto_depIdxs,
		MessageInfos:      file_saas_event_v1_event_proto_msgTypes,
	}.Build()
	File_saas_event_v1_event_proto = out.File
	file_saas_event_v1_event_proto_goTypes = nil
	file_saas_event_v1_event_proto_depIdxs = nil
}
