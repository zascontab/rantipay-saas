// Code generated by protoc-gen-go-grpc-proxy. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc-proxy v1.2.0
// - protoc             (unknown)
// source: realtime/api/notification/v1/notification.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

var _ NotificationServiceServer = (*notificationServiceClientProxy)(nil)

// notificationServiceClientProxy is the proxy to turn NotificationService client to server interface.
type notificationServiceClientProxy struct {
	cc NotificationServiceClient
}

func NewNotificationServiceClientProxy(cc NotificationServiceClient) NotificationServiceServer {
	return &notificationServiceClientProxy{cc}
}

func (c *notificationServiceClientProxy) ListNotification(ctx context.Context, in *ListNotificationRequest) (*ListNotificationReply, error) {
	return c.cc.ListNotification(ctx, in)
}
func (c *notificationServiceClientProxy) GetNotification(ctx context.Context, in *GetNotificationRequest) (*Notification, error) {
	return c.cc.GetNotification(ctx, in)
}
func (c *notificationServiceClientProxy) ReadNotification(ctx context.Context, in *ReadNotificationRequest) (*emptypb.Empty, error) {
	return c.cc.ReadNotification(ctx, in)
}
func (c *notificationServiceClientProxy) DeleteNotification(ctx context.Context, in *DeleteNotificationRequest) (*DeleteNotificationReply, error) {
	return c.cc.DeleteNotification(ctx, in)
}
